-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hlsExample_merge is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    outData_TREADY : IN STD_LOGIC;
    outData_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    outData_TVALID : OUT STD_LOGIC;
    outData_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    outData_TUSER : OUT STD_LOGIC_VECTOR (127 downto 0);
    outData_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    mod2merge_V_data_V_0_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    mod2merge_V_data_V_0_empty_n : IN STD_LOGIC;
    mod2merge_V_data_V_0_read : OUT STD_LOGIC;
    mod2merge_V_strb_V_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    mod2merge_V_strb_V_0_empty_n : IN STD_LOGIC;
    mod2merge_V_strb_V_0_read : OUT STD_LOGIC;
    mod2merge_V_user_V_0_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    mod2merge_V_user_V_0_empty_n : IN STD_LOGIC;
    mod2merge_V_user_V_0_read : OUT STD_LOGIC;
    mod2merge_V_last_V_0_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    mod2merge_V_last_V_0_empty_n : IN STD_LOGIC;
    mod2merge_V_last_V_0_read : OUT STD_LOGIC;
    mod2merge_V_data_V_1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    mod2merge_V_data_V_1_empty_n : IN STD_LOGIC;
    mod2merge_V_data_V_1_read : OUT STD_LOGIC;
    mod2merge_V_strb_V_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    mod2merge_V_strb_V_1_empty_n : IN STD_LOGIC;
    mod2merge_V_strb_V_1_read : OUT STD_LOGIC;
    mod2merge_V_user_V_1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    mod2merge_V_user_V_1_empty_n : IN STD_LOGIC;
    mod2merge_V_user_V_1_read : OUT STD_LOGIC;
    mod2merge_V_last_V_1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    mod2merge_V_last_V_1_empty_n : IN STD_LOGIC;
    mod2merge_V_last_V_1_read : OUT STD_LOGIC;
    mod2merge_V_data_V_2_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    mod2merge_V_data_V_2_empty_n : IN STD_LOGIC;
    mod2merge_V_data_V_2_read : OUT STD_LOGIC;
    mod2merge_V_strb_V_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    mod2merge_V_strb_V_2_empty_n : IN STD_LOGIC;
    mod2merge_V_strb_V_2_read : OUT STD_LOGIC;
    mod2merge_V_user_V_2_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    mod2merge_V_user_V_2_empty_n : IN STD_LOGIC;
    mod2merge_V_user_V_2_read : OUT STD_LOGIC;
    mod2merge_V_last_V_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    mod2merge_V_last_V_2_empty_n : IN STD_LOGIC;
    mod2merge_V_last_V_2_read : OUT STD_LOGIC );
end;


architecture behav of hlsExample_merge is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_true : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_bdd_34 : BOOLEAN;
    signal mod2merge_V_data_V_10_status : STD_LOGIC;
    signal tmp_fu_472_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_539_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_515_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_527_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal mod2merge_V_data_V_00_status : STD_LOGIC;
    signal mod2merge_V_data_V_20_status : STD_LOGIC;
    signal tmp_6_phi_fu_201_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_112 : BOOLEAN;
    signal mergeState_load_reg_561 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_mergeState_load_reg_561_pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_reg_568_pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_572 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_572_pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_576 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_2_reg_576_pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_outData_TREADY : STD_LOGIC;
    signal tmp_6_reg_198 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_198_pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_bdd_147 : BOOLEAN;
    signal mergeState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal streamSource_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal tmp_last_V_6_reg_185 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_7_reg_213 : STD_LOGIC_VECTOR (0 downto 0);
    signal tempCtr_3_fu_459_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_phiprechg_tempCtr_3_lcssa_reg_174pp0_it0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tempCtr_3_lcssa_phi_fu_177_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal tempCtr_3_1_fu_502_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_cast_fu_432_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_phiprechg_tmp_last_V_6_reg_185pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_6_phi_fu_189_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbreadreq_fu_80_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_tmp_6_reg_198pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbreadreq_fu_94_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbreadreq_fu_108_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_tmp_last_V_7_reg_213pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_7_phi_fu_217_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it0 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it0 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mod2merge_V_data_V_10_update : STD_LOGIC;
    signal mod2merge_V_data_V_00_update : STD_LOGIC;
    signal mod2merge_V_data_V_20_update : STD_LOGIC;
    signal ap_reg_ioackin_outData_TREADY : STD_LOGIC := '0';
    signal tempCtr_fu_437_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tempCtr_1_fu_449_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tempCtr_1_cast_fu_455_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_empty_0_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_empty_1_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_empty_2_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_472_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tempCtr_s_fu_484_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_1_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tempCtr_1_1_fu_496_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_515_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_70 : BOOLEAN;
    signal ap_sig_bdd_60 : BOOLEAN;
    signal ap_sig_bdd_83 : BOOLEAN;
    signal ap_sig_bdd_154 : BOOLEAN;
    signal ap_sig_bdd_96 : BOOLEAN;
    signal ap_sig_bdd_92 : BOOLEAN;
    signal ap_sig_bdd_102 : BOOLEAN;
    signal ap_sig_bdd_354 : BOOLEAN;
    signal ap_sig_bdd_359 : BOOLEAN;
    signal ap_sig_bdd_130 : BOOLEAN;
    signal ap_sig_bdd_140 : BOOLEAN;
    signal ap_sig_bdd_367 : BOOLEAN;
    signal ap_sig_bdd_571 : BOOLEAN;
    signal ap_sig_bdd_574 : BOOLEAN;
    signal ap_sig_bdd_570 : BOOLEAN;
    signal ap_sig_bdd_578 : BOOLEAN;
    signal ap_sig_bdd_577 : BOOLEAN;
    signal ap_sig_bdd_95 : BOOLEAN;
    signal ap_sig_bdd_88 : BOOLEAN;
    signal ap_sig_bdd_101 : BOOLEAN;
    signal ap_sig_bdd_273 : BOOLEAN;
    signal ap_sig_bdd_585 : BOOLEAN;

    component hlsExample_mux_3to1_sel2_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    hlsExample_mux_3to1_sel2_1_1_U84 : component hlsExample_mux_3to1_sel2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din1 => stream_empty_0_fu_414_p2,
        din2 => stream_empty_1_fu_420_p2,
        din3 => stream_empty_2_fu_426_p2,
        din4 => tmp_fu_472_p4,
        dout => tmp_fu_472_p5);

    hlsExample_mux_3to1_sel2_1_1_U85 : component hlsExample_mux_3to1_sel2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din1 => stream_empty_0_fu_414_p2,
        din2 => stream_empty_1_fu_420_p2,
        din3 => stream_empty_2_fu_426_p2,
        din4 => tmp_1_fu_515_p4,
        dout => tmp_1_fu_515_p5);

    hlsExample_mux_3to1_sel2_1_1_U86 : component hlsExample_mux_3to1_sel2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din1 => stream_empty_0_fu_414_p2,
        din2 => stream_empty_1_fu_420_p2,
        din3 => stream_empty_2_fu_426_p2,
        din4 => streamSource_V,
        dout => tmp_2_fu_527_p5);





    -- the current state (ap_CS_fsm0) of the state machine. --
    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm1) of the state machine. --
    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0))))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_outData_TREADY assign process. --
    ap_reg_ioackin_outData_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_outData_TREADY <= ap_const_logic_0;
            else
                if ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))))))) then 
                    ap_reg_ioackin_outData_TREADY <= ap_const_logic_0;
                elsif ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_done_reg = ap_const_logic_1)) and (ap_const_logic_1 = outData_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_done_reg = ap_const_logic_1)) and (ap_const_logic_1 = outData_TREADY)))) then 
                    ap_reg_ioackin_outData_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1 assign process. --
    ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_83) then 
                    ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1 <= mod2merge_V_data_V_2_dout;
                elsif (ap_sig_bdd_60) then 
                    ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1 <= mod2merge_V_data_V_1_dout;
                elsif (ap_sig_bdd_70) then 
                    ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1 <= mod2merge_V_data_V_0_dout;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1 <= ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1 assign process. --
    ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_102) then 
                    ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1 <= mod2merge_V_data_V_2_dout;
                elsif (ap_sig_bdd_92) then 
                    ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1 <= mod2merge_V_data_V_1_dout;
                elsif (ap_sig_bdd_96) then 
                    ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1 <= mod2merge_V_data_V_0_dout;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1 <= ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1 assign process. --
    ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_83) then 
                    ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1 <= mod2merge_V_strb_V_2_dout;
                elsif (ap_sig_bdd_60) then 
                    ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1 <= mod2merge_V_strb_V_1_dout;
                elsif (ap_sig_bdd_70) then 
                    ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1 <= mod2merge_V_strb_V_0_dout;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1 <= ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1 assign process. --
    ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_102) then 
                    ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1 <= mod2merge_V_strb_V_2_dout;
                elsif (ap_sig_bdd_92) then 
                    ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1 <= mod2merge_V_strb_V_1_dout;
                elsif (ap_sig_bdd_96) then 
                    ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1 <= mod2merge_V_strb_V_0_dout;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1 <= ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1 assign process. --
    ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_83) then 
                    ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1 <= mod2merge_V_user_V_2_dout;
                elsif (ap_sig_bdd_60) then 
                    ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1 <= mod2merge_V_user_V_1_dout;
                elsif (ap_sig_bdd_70) then 
                    ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1 <= mod2merge_V_user_V_0_dout;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1 <= ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1 assign process. --
    ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_102) then 
                    ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1 <= mod2merge_V_user_V_2_dout;
                elsif (ap_sig_bdd_92) then 
                    ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1 <= mod2merge_V_user_V_1_dout;
                elsif (ap_sig_bdd_96) then 
                    ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1 <= mod2merge_V_user_V_0_dout;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1 <= ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- mergeState assign process. --
    mergeState_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_359) then 
                    mergeState <= ap_const_lv1_0;
                elsif (ap_sig_bdd_354) then 
                    mergeState <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    -- tmp_6_reg_198 assign process. --
    tmp_6_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_101) then 
                    tmp_6_reg_198 <= grp_nbreadreq_fu_108_p6;
                elsif (ap_sig_bdd_88) then 
                    tmp_6_reg_198 <= grp_nbreadreq_fu_94_p6;
                elsif (ap_sig_bdd_95) then 
                    tmp_6_reg_198 <= grp_nbreadreq_fu_80_p6;
                elsif ((ap_true = ap_true)) then 
                    tmp_6_reg_198 <= ap_reg_phiprechg_tmp_6_reg_198pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- tmp_last_V_6_reg_185 assign process. --
    tmp_last_V_6_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_83) then 
                    tmp_last_V_6_reg_185 <= mod2merge_V_last_V_2_dout;
                elsif (ap_sig_bdd_60) then 
                    tmp_last_V_6_reg_185 <= mod2merge_V_last_V_1_dout;
                elsif (ap_sig_bdd_70) then 
                    tmp_last_V_6_reg_185 <= mod2merge_V_last_V_0_dout;
                elsif ((ap_true = ap_true)) then 
                    tmp_last_V_6_reg_185 <= ap_reg_phiprechg_tmp_last_V_6_reg_185pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- tmp_last_V_7_reg_213 assign process. --
    tmp_last_V_7_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_102) then 
                    tmp_last_V_7_reg_213 <= mod2merge_V_last_V_2_dout;
                elsif (ap_sig_bdd_92) then 
                    tmp_last_V_7_reg_213 <= mod2merge_V_last_V_1_dout;
                elsif (ap_sig_bdd_96) then 
                    tmp_last_V_7_reg_213 <= mod2merge_V_last_V_0_dout;
                elsif ((ap_true = ap_true)) then 
                    tmp_last_V_7_reg_213 <= ap_reg_phiprechg_tmp_last_V_7_reg_213pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                mergeState_load_reg_561 <= mergeState;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_515_p5)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_2_fu_527_p5))))) then
                streamSource_V <= tmp_8_fu_539_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (mergeState = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = tmp_fu_472_p5)))) then
                tmp_1_reg_572 <= tmp_1_fu_515_p5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (mergeState = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = tmp_fu_472_p5)) and not((ap_const_lv1_0 = tmp_1_fu_515_p5)))) then
                tmp_2_reg_576 <= tmp_2_fu_527_p5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (mergeState = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_reg_568 <= tmp_fu_472_p5;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm0) of the state machine. --
    ap_NS_fsm0_assign_proc : process (ap_done_reg, ap_CS_fsm0, ap_sig_bdd_112, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_sig_ioackin_outData_TREADY, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;

    -- the next state (ap_NS_fsm1) of the state machine. --
    ap_NS_fsm1_assign_proc : process (ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_bdd_112, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_sig_ioackin_outData_TREADY, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0))))) and not(ap_sig_bdd_112))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0))))) and (not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_bdd_112)))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_sig_ioackin_outData_TREADY, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_112, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_sig_ioackin_outData_TREADY, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_tempCtr_3_lcssa_reg_174pp0_it0 <= "XXX";
    ap_reg_phiprechg_tmp_6_reg_198pp0_it0 <= "X";
    ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_tmp_last_V_6_reg_185pp0_it0 <= "X";
    ap_reg_phiprechg_tmp_last_V_7_reg_213pp0_it0 <= "X";
    ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it0 <= "XXXXXXXX";
    ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it0 <= "XXXXXXXX";
    ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_ppstg_mergeState_load_reg_561_pp0_it0 <= mergeState_load_reg_561;
    ap_reg_ppstg_tmp_1_reg_572_pp0_it0 <= tmp_1_reg_572;
    ap_reg_ppstg_tmp_2_reg_576_pp0_it0 <= tmp_2_reg_576;
    ap_reg_ppstg_tmp_6_reg_198_pp0_it0 <= tmp_6_reg_198;
    ap_reg_ppstg_tmp_reg_568_pp0_it0 <= tmp_reg_568;

    -- ap_sig_bdd_101 assign process. --
    ap_sig_bdd_101_assign_proc : process(mergeState, streamSource_V)
    begin
                ap_sig_bdd_101 <= (not((mergeState = ap_const_lv1_0)) and not((ap_const_lv2_1 = streamSource_V)) and not((ap_const_lv2_0 = streamSource_V)));
    end process;


    -- ap_sig_bdd_102 assign process. --
    ap_sig_bdd_102_assign_proc : process(tmp_6_phi_fu_201_p6, mergeState, streamSource_V)
    begin
                ap_sig_bdd_102 <= (not((mergeState = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)) and not((ap_const_lv2_1 = streamSource_V)) and not((ap_const_lv2_0 = streamSource_V)));
    end process;


    -- ap_sig_bdd_112 assign process. --
    ap_sig_bdd_112_assign_proc : process(ap_start, ap_done_reg, mod2merge_V_data_V_10_status, tmp_fu_472_p5, tmp_8_fu_539_p1, tmp_1_fu_515_p5, tmp_2_fu_527_p5, mod2merge_V_data_V_00_status, mod2merge_V_data_V_20_status, tmp_6_phi_fu_201_p6, mergeState, streamSource_V)
    begin
                ap_sig_bdd_112 <= (((mod2merge_V_data_V_10_status = ap_const_logic_0) and (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_1)) or ((mergeState = ap_const_lv1_0) and (tmp_8_fu_539_p1 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_1_fu_515_p5)) or ((mergeState = ap_const_lv1_0) and (tmp_8_fu_539_p1 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_2_fu_527_p5)))) or ((mod2merge_V_data_V_00_status = ap_const_logic_0) and (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_515_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_2_fu_527_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0)))) or ((mod2merge_V_data_V_20_status = ap_const_logic_0) and (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0))) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_515_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0))) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_2_fu_527_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0))))) or ((mod2merge_V_data_V_10_status = ap_const_logic_0) and not((mergeState = ap_const_lv1_0)) and (ap_const_lv2_1 = streamSource_V) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6))) or ((mod2merge_V_data_V_00_status = ap_const_logic_0) and not((mergeState = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)) and (ap_const_lv2_0 = streamSource_V)) or ((mod2merge_V_data_V_20_status = ap_const_logic_0) and not((mergeState = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)) and not((ap_const_lv2_1 = streamSource_V)) and not((ap_const_lv2_0 = streamSource_V))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_130 assign process. --
    ap_sig_bdd_130_assign_proc : process(ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0)
    begin
                ap_sig_bdd_130 <= (((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0)));
    end process;


    -- ap_sig_bdd_140 assign process. --
    ap_sig_bdd_140_assign_proc : process(ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_6_reg_198_pp0_it0)
    begin
                ap_sig_bdd_140 <= (not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)));
    end process;


    -- ap_sig_bdd_147 assign process. --
    ap_sig_bdd_147_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_147 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    -- ap_sig_bdd_154 assign process. --
    ap_sig_bdd_154_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_112, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_sig_ioackin_outData_TREADY, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_154 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_273 assign process. --
    ap_sig_bdd_273_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0)
    begin
                ap_sig_bdd_273 <= ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0));
    end process;


    -- ap_sig_bdd_34 assign process. --
    ap_sig_bdd_34_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_34 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    -- ap_sig_bdd_354 assign process. --
    ap_sig_bdd_354_assign_proc : process(tmp_fu_472_p5, tmp_1_fu_515_p5, tmp_2_fu_527_p5, mergeState, tmp_last_V_6_phi_fu_189_p6)
    begin
                ap_sig_bdd_354 <= (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and (ap_const_lv1_0 = tmp_last_V_6_phi_fu_189_p6)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_515_p5) and (ap_const_lv1_0 = tmp_last_V_6_phi_fu_189_p6)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_2_fu_527_p5) and (ap_const_lv1_0 = tmp_last_V_6_phi_fu_189_p6)));
    end process;


    -- ap_sig_bdd_359 assign process. --
    ap_sig_bdd_359_assign_proc : process(tmp_6_phi_fu_201_p6, mergeState, tmp_last_V_7_phi_fu_217_p6)
    begin
                ap_sig_bdd_359 <= (not((mergeState = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)) and not((ap_const_lv1_0 = tmp_last_V_7_phi_fu_217_p6)));
    end process;


    -- ap_sig_bdd_367 assign process. --
    ap_sig_bdd_367_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_367 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_done_reg = ap_const_logic_1)));
    end process;


    -- ap_sig_bdd_570 assign process. --
    ap_sig_bdd_570_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, mergeState)
    begin
                ap_sig_bdd_570 <= ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (mergeState = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_571 assign process. --
    ap_sig_bdd_571_assign_proc : process(tmp_fu_472_p5, tmp_1_fu_515_p5)
    begin
                ap_sig_bdd_571 <= ((ap_const_lv1_0 = tmp_1_fu_515_p5) and not((ap_const_lv1_0 = tmp_fu_472_p5)));
    end process;


    -- ap_sig_bdd_574 assign process. --
    ap_sig_bdd_574_assign_proc : process(tmp_fu_472_p5, tmp_1_fu_515_p5, tmp_2_fu_527_p5)
    begin
                ap_sig_bdd_574 <= ((ap_const_lv1_0 = tmp_2_fu_527_p5) and not((ap_const_lv1_0 = tmp_fu_472_p5)) and not((ap_const_lv1_0 = tmp_1_fu_515_p5)));
    end process;


    -- ap_sig_bdd_577 assign process. --
    ap_sig_bdd_577_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, mergeState)
    begin
                ap_sig_bdd_577 <= ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((mergeState = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_578 assign process. --
    ap_sig_bdd_578_assign_proc : process(streamSource_V)
    begin
                ap_sig_bdd_578 <= (not((ap_const_lv2_1 = streamSource_V)) and not((ap_const_lv2_0 = streamSource_V)));
    end process;


    -- ap_sig_bdd_585 assign process. --
    ap_sig_bdd_585_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, tmp_6_phi_fu_201_p6, mergeState)
    begin
                ap_sig_bdd_585 <= ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((mergeState = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)));
    end process;


    -- ap_sig_bdd_60 assign process. --
    ap_sig_bdd_60_assign_proc : process(tmp_fu_472_p5, tmp_8_fu_539_p1, tmp_1_fu_515_p5, tmp_2_fu_527_p5, mergeState)
    begin
                ap_sig_bdd_60 <= (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_1)) or ((mergeState = ap_const_lv1_0) and (tmp_8_fu_539_p1 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_1_fu_515_p5)) or ((mergeState = ap_const_lv1_0) and (tmp_8_fu_539_p1 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_2_fu_527_p5)));
    end process;


    -- ap_sig_bdd_70 assign process. --
    ap_sig_bdd_70_assign_proc : process(tmp_fu_472_p5, tmp_8_fu_539_p1, tmp_1_fu_515_p5, tmp_2_fu_527_p5, mergeState)
    begin
                ap_sig_bdd_70 <= (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_515_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_2_fu_527_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0)));
    end process;


    -- ap_sig_bdd_83 assign process. --
    ap_sig_bdd_83_assign_proc : process(tmp_fu_472_p5, tmp_8_fu_539_p1, tmp_1_fu_515_p5, tmp_2_fu_527_p5, mergeState)
    begin
                ap_sig_bdd_83 <= (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0))) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_515_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0))) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_2_fu_527_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0))));
    end process;


    -- ap_sig_bdd_88 assign process. --
    ap_sig_bdd_88_assign_proc : process(mergeState, streamSource_V)
    begin
                ap_sig_bdd_88 <= (not((mergeState = ap_const_lv1_0)) and (ap_const_lv2_1 = streamSource_V));
    end process;


    -- ap_sig_bdd_92 assign process. --
    ap_sig_bdd_92_assign_proc : process(tmp_6_phi_fu_201_p6, mergeState, streamSource_V)
    begin
                ap_sig_bdd_92 <= (not((mergeState = ap_const_lv1_0)) and (ap_const_lv2_1 = streamSource_V) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)));
    end process;


    -- ap_sig_bdd_95 assign process. --
    ap_sig_bdd_95_assign_proc : process(mergeState, streamSource_V)
    begin
                ap_sig_bdd_95 <= (not((mergeState = ap_const_lv1_0)) and (ap_const_lv2_0 = streamSource_V));
    end process;


    -- ap_sig_bdd_96 assign process. --
    ap_sig_bdd_96_assign_proc : process(tmp_6_phi_fu_201_p6, mergeState, streamSource_V)
    begin
                ap_sig_bdd_96 <= (not((mergeState = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)) and (ap_const_lv2_0 = streamSource_V));
    end process;


    -- ap_sig_cseq_ST_st0_fsm1_0 assign process. --
    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_bdd_34)
    begin
        if (ap_sig_bdd_34) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm0_0 assign process. --
    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm1_1 assign process. --
    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_bdd_147)
    begin
        if (ap_sig_bdd_147) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_outData_TREADY assign process. --
    ap_sig_ioackin_outData_TREADY_assign_proc : process(outData_TREADY, ap_reg_ioackin_outData_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_outData_TREADY)) then 
            ap_sig_ioackin_outData_TREADY <= outData_TREADY;
        else 
            ap_sig_ioackin_outData_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    grp_nbreadreq_fu_108_p6 <= (0=>(mod2merge_V_data_V_2_empty_n and mod2merge_V_strb_V_2_empty_n and mod2merge_V_user_V_2_empty_n and mod2merge_V_last_V_2_empty_n), others=>'-');
    grp_nbreadreq_fu_80_p6 <= (0=>(mod2merge_V_data_V_0_empty_n and mod2merge_V_strb_V_0_empty_n and mod2merge_V_user_V_0_empty_n and mod2merge_V_last_V_0_empty_n), others=>'-');
    grp_nbreadreq_fu_94_p6 <= (0=>(mod2merge_V_data_V_1_empty_n and mod2merge_V_strb_V_1_empty_n and mod2merge_V_user_V_1_empty_n and mod2merge_V_last_V_1_empty_n), others=>'-');
    mod2merge_V_data_V_00_status <= (mod2merge_V_data_V_0_empty_n and mod2merge_V_strb_V_0_empty_n and mod2merge_V_user_V_0_empty_n and mod2merge_V_last_V_0_empty_n);

    -- mod2merge_V_data_V_00_update assign process. --
    mod2merge_V_data_V_00_update_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, tmp_fu_472_p5, tmp_8_fu_539_p1, tmp_1_fu_515_p5, tmp_2_fu_527_p5, tmp_6_phi_fu_201_p6, ap_sig_bdd_112, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_sig_ioackin_outData_TREADY, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1, mergeState, streamSource_V)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_515_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0)) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_2_fu_527_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_0))) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((mergeState = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)) and (ap_const_lv2_0 = streamSource_V) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))))) then 
            mod2merge_V_data_V_00_update <= ap_const_logic_1;
        else 
            mod2merge_V_data_V_00_update <= ap_const_logic_0;
        end if; 
    end process;

    mod2merge_V_data_V_0_read <= mod2merge_V_data_V_00_update;
    mod2merge_V_data_V_10_status <= (mod2merge_V_data_V_1_empty_n and mod2merge_V_strb_V_1_empty_n and mod2merge_V_user_V_1_empty_n and mod2merge_V_last_V_1_empty_n);

    -- mod2merge_V_data_V_10_update assign process. --
    mod2merge_V_data_V_10_update_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, tmp_fu_472_p5, tmp_8_fu_539_p1, tmp_1_fu_515_p5, tmp_2_fu_527_p5, tmp_6_phi_fu_201_p6, ap_sig_bdd_112, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_sig_ioackin_outData_TREADY, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1, mergeState, streamSource_V)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and (tmp_8_fu_539_p1 = ap_const_lv2_1)) or ((mergeState = ap_const_lv1_0) and (tmp_8_fu_539_p1 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_1_fu_515_p5)) or ((mergeState = ap_const_lv1_0) and (tmp_8_fu_539_p1 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_2_fu_527_p5))) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((mergeState = ap_const_lv1_0)) and (ap_const_lv2_1 = streamSource_V) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))))) then 
            mod2merge_V_data_V_10_update <= ap_const_logic_1;
        else 
            mod2merge_V_data_V_10_update <= ap_const_logic_0;
        end if; 
    end process;

    mod2merge_V_data_V_1_read <= mod2merge_V_data_V_10_update;
    mod2merge_V_data_V_20_status <= (mod2merge_V_data_V_2_empty_n and mod2merge_V_strb_V_2_empty_n and mod2merge_V_user_V_2_empty_n and mod2merge_V_last_V_2_empty_n);

    -- mod2merge_V_data_V_20_update assign process. --
    mod2merge_V_data_V_20_update_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, tmp_fu_472_p5, tmp_8_fu_539_p1, tmp_1_fu_515_p5, tmp_2_fu_527_p5, tmp_6_phi_fu_201_p6, ap_sig_bdd_112, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_sig_ioackin_outData_TREADY, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1, mergeState, streamSource_V)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_fu_472_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0))) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_1_fu_515_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0))) or ((mergeState = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_2_fu_527_p5) and not((tmp_8_fu_539_p1 = ap_const_lv2_1)) and not((tmp_8_fu_539_p1 = ap_const_lv2_0)))) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((mergeState = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_phi_fu_201_p6)) and not((ap_const_lv2_1 = streamSource_V)) and not((ap_const_lv2_0 = streamSource_V)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_112 or ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_0 = ap_sig_ioackin_outData_TREADY)) or ((ap_const_logic_0 = ap_sig_ioackin_outData_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))))) then 
            mod2merge_V_data_V_20_update <= ap_const_logic_1;
        else 
            mod2merge_V_data_V_20_update <= ap_const_logic_0;
        end if; 
    end process;

    mod2merge_V_data_V_2_read <= mod2merge_V_data_V_20_update;
    mod2merge_V_last_V_0_read <= mod2merge_V_data_V_00_update;
    mod2merge_V_last_V_1_read <= mod2merge_V_data_V_10_update;
    mod2merge_V_last_V_2_read <= mod2merge_V_data_V_20_update;
    mod2merge_V_strb_V_0_read <= mod2merge_V_data_V_00_update;
    mod2merge_V_strb_V_1_read <= mod2merge_V_data_V_10_update;
    mod2merge_V_strb_V_2_read <= mod2merge_V_data_V_20_update;
    mod2merge_V_user_V_0_read <= mod2merge_V_data_V_00_update;
    mod2merge_V_user_V_1_read <= mod2merge_V_data_V_10_update;
    mod2merge_V_user_V_2_read <= mod2merge_V_data_V_20_update;

    -- outData_TDATA assign process. --
    outData_TDATA_assign_proc : process(ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1, ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1, ap_sig_bdd_130, ap_sig_bdd_140, ap_sig_bdd_367)
    begin
        if (ap_sig_bdd_367) then
            if (ap_sig_bdd_140) then 
                outData_TDATA <= ap_reg_phiprechg_tmp_data_V_7_reg_286pp0_it1;
            elsif (ap_sig_bdd_130) then 
                outData_TDATA <= ap_reg_phiprechg_tmp_data_V_6_reg_250pp0_it1;
            else 
                outData_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outData_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- outData_TLAST assign process. --
    outData_TLAST_assign_proc : process(tmp_last_V_6_reg_185, tmp_last_V_7_reg_213, ap_sig_bdd_130, ap_sig_bdd_140, ap_sig_bdd_367)
    begin
        if (ap_sig_bdd_367) then
            if (ap_sig_bdd_140) then 
                outData_TLAST <= tmp_last_V_7_reg_213;
            elsif (ap_sig_bdd_130) then 
                outData_TLAST <= tmp_last_V_6_reg_185;
            else 
                outData_TLAST <= "X";
            end if;
        else 
            outData_TLAST <= "X";
        end if; 
    end process;


    -- outData_TSTRB assign process. --
    outData_TSTRB_assign_proc : process(ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1, ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1, ap_sig_bdd_130, ap_sig_bdd_140, ap_sig_bdd_367)
    begin
        if (ap_sig_bdd_367) then
            if (ap_sig_bdd_140) then 
                outData_TSTRB <= ap_reg_phiprechg_tmp_strb_V_7_reg_274pp0_it1;
            elsif (ap_sig_bdd_130) then 
                outData_TSTRB <= ap_reg_phiprechg_tmp_strb_V_6_reg_238pp0_it1;
            else 
                outData_TSTRB <= "XXXXXXXX";
            end if;
        else 
            outData_TSTRB <= "XXXXXXXX";
        end if; 
    end process;


    -- outData_TUSER assign process. --
    outData_TUSER_assign_proc : process(ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1, ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1, ap_sig_bdd_130, ap_sig_bdd_140, ap_sig_bdd_367)
    begin
        if (ap_sig_bdd_367) then
            if (ap_sig_bdd_140) then 
                outData_TUSER <= ap_reg_phiprechg_tmp_user_V_7_reg_262pp0_it1;
            elsif (ap_sig_bdd_130) then 
                outData_TUSER <= ap_reg_phiprechg_tmp_user_V_6_reg_226pp0_it1;
            else 
                outData_TUSER <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outData_TUSER <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- outData_TVALID assign process. --
    outData_TVALID_assign_proc : process(ap_done_reg, ap_reg_ppstg_mergeState_load_reg_561_pp0_it0, ap_reg_ppstg_tmp_reg_568_pp0_it0, ap_reg_ppstg_tmp_1_reg_572_pp0_it0, ap_reg_ppstg_tmp_2_reg_576_pp0_it0, ap_reg_ppstg_tmp_6_reg_198_pp0_it0, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ioackin_outData_TREADY)
    begin
        if ((((((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_568_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_572_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_576_pp0_it0))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_done_reg = ap_const_logic_1)) and (ap_const_logic_0 = ap_reg_ioackin_outData_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_mergeState_load_reg_561_pp0_it0)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_198_pp0_it0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_done_reg = ap_const_logic_1)) and (ap_const_logic_0 = ap_reg_ioackin_outData_TREADY)))) then 
            outData_TVALID <= ap_const_logic_1;
        else 
            outData_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    stream_empty_0_fu_414_p2 <= (grp_nbreadreq_fu_80_p6 xor ap_const_lv1_1);
    stream_empty_1_fu_420_p2 <= (grp_nbreadreq_fu_94_p6 xor ap_const_lv1_1);
    stream_empty_2_fu_426_p2 <= (grp_nbreadreq_fu_108_p6 xor ap_const_lv1_1);
    tempCtr_1_1_fu_496_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(tmp_6_cast_fu_432_p1));
        tempCtr_1_cast_fu_455_p1 <= std_logic_vector(resize(signed(tempCtr_1_fu_449_p2),3));

    tempCtr_1_fu_449_p2 <= (streamSource_V xor ap_const_lv2_2);
    tempCtr_3_1_fu_502_p3 <= 
        tempCtr_1_1_fu_496_p2 when (tmp_5_1_fu_490_p2(0) = '1') else 
        tempCtr_s_fu_484_p2;
    tempCtr_3_fu_459_p3 <= 
        tempCtr_1_cast_fu_455_p1 when (tmp_5_fu_443_p2(0) = '1') else 
        tempCtr_fu_437_p2;

    -- tempCtr_3_lcssa_phi_fu_177_p6 assign process. --
    tempCtr_3_lcssa_phi_fu_177_p6_assign_proc : process(tmp_fu_472_p5, tempCtr_3_fu_459_p3, ap_reg_phiprechg_tempCtr_3_lcssa_reg_174pp0_it0, tempCtr_3_1_fu_502_p3, tmp_6_cast_fu_432_p1, ap_sig_bdd_571, ap_sig_bdd_574, ap_sig_bdd_570)
    begin
        if (ap_sig_bdd_570) then
            if (ap_sig_bdd_574) then 
                tempCtr_3_lcssa_phi_fu_177_p6 <= tmp_6_cast_fu_432_p1;
            elsif (ap_sig_bdd_571) then 
                tempCtr_3_lcssa_phi_fu_177_p6 <= tempCtr_3_1_fu_502_p3;
            elsif ((ap_const_lv1_0 = tmp_fu_472_p5)) then 
                tempCtr_3_lcssa_phi_fu_177_p6 <= tempCtr_3_fu_459_p3;
            else 
                tempCtr_3_lcssa_phi_fu_177_p6 <= ap_reg_phiprechg_tempCtr_3_lcssa_reg_174pp0_it0;
            end if;
        else 
            tempCtr_3_lcssa_phi_fu_177_p6 <= ap_reg_phiprechg_tempCtr_3_lcssa_reg_174pp0_it0;
        end if; 
    end process;

    tempCtr_fu_437_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(tmp_6_cast_fu_432_p1));
    tempCtr_s_fu_484_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(tmp_6_cast_fu_432_p1));
    tmp_1_fu_515_p4 <= tempCtr_3_1_fu_502_p3(2 - 1 downto 0);
    tmp_5_1_fu_490_p2 <= "1" when (unsigned(tempCtr_s_fu_484_p2) > unsigned(ap_const_lv3_2)) else "0";
    tmp_5_fu_443_p2 <= "1" when (unsigned(tempCtr_fu_437_p2) > unsigned(ap_const_lv3_2)) else "0";
    tmp_6_cast_fu_432_p1 <= std_logic_vector(resize(unsigned(streamSource_V),3));

    -- tmp_6_phi_fu_201_p6 assign process. --
    tmp_6_phi_fu_201_p6_assign_proc : process(streamSource_V, grp_nbreadreq_fu_80_p6, ap_reg_phiprechg_tmp_6_reg_198pp0_it0, grp_nbreadreq_fu_94_p6, grp_nbreadreq_fu_108_p6, ap_sig_bdd_578, ap_sig_bdd_577)
    begin
        if (ap_sig_bdd_577) then
            if (ap_sig_bdd_578) then 
                tmp_6_phi_fu_201_p6 <= grp_nbreadreq_fu_108_p6;
            elsif ((ap_const_lv2_1 = streamSource_V)) then 
                tmp_6_phi_fu_201_p6 <= grp_nbreadreq_fu_94_p6;
            elsif ((ap_const_lv2_0 = streamSource_V)) then 
                tmp_6_phi_fu_201_p6 <= grp_nbreadreq_fu_80_p6;
            else 
                tmp_6_phi_fu_201_p6 <= ap_reg_phiprechg_tmp_6_reg_198pp0_it0;
            end if;
        else 
            tmp_6_phi_fu_201_p6 <= ap_reg_phiprechg_tmp_6_reg_198pp0_it0;
        end if; 
    end process;

    tmp_8_fu_539_p1 <= tempCtr_3_lcssa_phi_fu_177_p6(2 - 1 downto 0);
    tmp_fu_472_p4 <= tempCtr_3_fu_459_p3(2 - 1 downto 0);

    -- tmp_last_V_6_phi_fu_189_p6 assign process. --
    tmp_last_V_6_phi_fu_189_p6_assign_proc : process(mod2merge_V_last_V_0_dout, mod2merge_V_last_V_1_dout, mod2merge_V_last_V_2_dout, ap_reg_phiprechg_tmp_last_V_6_reg_185pp0_it0, ap_sig_bdd_70, ap_sig_bdd_60, ap_sig_bdd_83, ap_sig_bdd_273)
    begin
        if (ap_sig_bdd_273) then
            if (ap_sig_bdd_83) then 
                tmp_last_V_6_phi_fu_189_p6 <= mod2merge_V_last_V_2_dout;
            elsif (ap_sig_bdd_60) then 
                tmp_last_V_6_phi_fu_189_p6 <= mod2merge_V_last_V_1_dout;
            elsif (ap_sig_bdd_70) then 
                tmp_last_V_6_phi_fu_189_p6 <= mod2merge_V_last_V_0_dout;
            else 
                tmp_last_V_6_phi_fu_189_p6 <= ap_reg_phiprechg_tmp_last_V_6_reg_185pp0_it0;
            end if;
        else 
            tmp_last_V_6_phi_fu_189_p6 <= ap_reg_phiprechg_tmp_last_V_6_reg_185pp0_it0;
        end if; 
    end process;


    -- tmp_last_V_7_phi_fu_217_p6 assign process. --
    tmp_last_V_7_phi_fu_217_p6_assign_proc : process(streamSource_V, mod2merge_V_last_V_0_dout, mod2merge_V_last_V_1_dout, mod2merge_V_last_V_2_dout, ap_reg_phiprechg_tmp_last_V_7_reg_213pp0_it0, ap_sig_bdd_578, ap_sig_bdd_585)
    begin
        if (ap_sig_bdd_585) then
            if (ap_sig_bdd_578) then 
                tmp_last_V_7_phi_fu_217_p6 <= mod2merge_V_last_V_2_dout;
            elsif ((ap_const_lv2_1 = streamSource_V)) then 
                tmp_last_V_7_phi_fu_217_p6 <= mod2merge_V_last_V_1_dout;
            elsif ((ap_const_lv2_0 = streamSource_V)) then 
                tmp_last_V_7_phi_fu_217_p6 <= mod2merge_V_last_V_0_dout;
            else 
                tmp_last_V_7_phi_fu_217_p6 <= ap_reg_phiprechg_tmp_last_V_7_reg_213pp0_it0;
            end if;
        else 
            tmp_last_V_7_phi_fu_217_p6 <= ap_reg_phiprechg_tmp_last_V_7_reg_213pp0_it0;
        end if; 
    end process;

end behav;
