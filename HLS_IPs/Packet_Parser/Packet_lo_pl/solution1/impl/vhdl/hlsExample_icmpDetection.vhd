-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hlsExample_icmpDetection is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cutLength2ipDetect_V_data_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    cutLength2ipDetect_V_data_V_empty_n : IN STD_LOGIC;
    cutLength2ipDetect_V_data_V_read : OUT STD_LOGIC;
    cutLength2ipDetect_V_strb_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    cutLength2ipDetect_V_strb_V_empty_n : IN STD_LOGIC;
    cutLength2ipDetect_V_strb_V_read : OUT STD_LOGIC;
    cutLength2ipDetect_V_user_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    cutLength2ipDetect_V_user_V_empty_n : IN STD_LOGIC;
    cutLength2ipDetect_V_user_V_read : OUT STD_LOGIC;
    cutLength2ipDetect_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    cutLength2ipDetect_V_last_V_empty_n : IN STD_LOGIC;
    cutLength2ipDetect_V_last_V_read : OUT STD_LOGIC;
    parser2icmp_V_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    parser2icmp_V_data_V_full_n : IN STD_LOGIC;
    parser2icmp_V_data_V_write : OUT STD_LOGIC;
    parser2icmp_V_strb_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    parser2icmp_V_strb_V_full_n : IN STD_LOGIC;
    parser2icmp_V_strb_V_write : OUT STD_LOGIC;
    parser2icmp_V_user_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    parser2icmp_V_user_V_full_n : IN STD_LOGIC;
    parser2icmp_V_user_V_write : OUT STD_LOGIC;
    parser2icmp_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    parser2icmp_V_last_V_full_n : IN STD_LOGIC;
    parser2icmp_V_last_V_write : OUT STD_LOGIC;
    parser2loopback_V_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    parser2loopback_V_data_V_full_n : IN STD_LOGIC;
    parser2loopback_V_data_V_write : OUT STD_LOGIC;
    parser2loopback_V_strb_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    parser2loopback_V_strb_V_full_n : IN STD_LOGIC;
    parser2loopback_V_strb_V_write : OUT STD_LOGIC;
    parser2loopback_V_user_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    parser2loopback_V_user_V_full_n : IN STD_LOGIC;
    parser2loopback_V_user_V_write : OUT STD_LOGIC;
    parser2loopback_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    parser2loopback_V_last_V_full_n : IN STD_LOGIC;
    parser2loopback_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of hlsExample_icmpDetection is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_bdd_34 : BOOLEAN;
    signal cutLength2ipDetect_V_data_V0_status : STD_LOGIC;
    signal tmp_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_nbreadreq_fu_106_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_53 : BOOLEAN;
    signal parser2loopback_V_data_V1_status : STD_LOGIC;
    signal tmp_reg_478 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_482 : STD_LOGIC_VECTOR (0 downto 0);
    signal parser2icmp_V_data_V1_status : STD_LOGIC;
    signal tmp_7_reg_486 : STD_LOGIC_VECTOR (0 downto 0);
    signal ipDetectState_load_reg_510 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_reg_514 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_518 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_104 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_bdd_110 : BOOLEAN;
    signal dip_leftToWrite_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal dip_ipProtocol_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ipDetectState : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal dip_wordCount_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal wordBuffer_Array_data_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal wordBuffer_Array_data_V_ce0 : STD_LOGIC;
    signal wordBuffer_Array_data_V_we0 : STD_LOGIC;
    signal wordBuffer_Array_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal wordBuffer_Array_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal wordBuffer_Array_strb_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal wordBuffer_Array_strb_V_ce0 : STD_LOGIC;
    signal wordBuffer_Array_strb_V_we0 : STD_LOGIC;
    signal wordBuffer_Array_strb_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal wordBuffer_Array_strb_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal wordBuffer_Array_user_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal wordBuffer_Array_user_V_ce0 : STD_LOGIC;
    signal wordBuffer_Array_user_V_we0 : STD_LOGIC;
    signal wordBuffer_Array_user_V_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal wordBuffer_Array_user_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal wordBuffer_Array_last_V_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal wordBuffer_Array_last_V_ce0 : STD_LOGIC;
    signal wordBuffer_Array_last_V_we0 : STD_LOGIC;
    signal wordBuffer_Array_last_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal wordBuffer_Array_last_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_16_reg_490 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_reg_495 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_reg_500 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_last_V_fu_364_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_505 : STD_LOGIC_VECTOR (0 downto 0);
    signal ipDetectState_load_load_fu_368_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_ipDetectState_flag_1_reg_164pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ipDetectState_flag_1_phi_fu_167_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_ipDetectState_new_1_reg_180pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ipDetectState_new_1_phi_fu_183_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_flag_reg_197pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal dip_wordCount_V_flag_phi_fu_200_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_405_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_new_reg_214pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal dip_wordCount_V_new_phi_fu_217_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_ipDetectState_flag_2_reg_230pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ipDetectState_flag_2_phi_fu_233_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_ipDetectState_new_2_reg_242pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ipDetectState_new_2_phi_fu_245_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_253pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal dip_wordCount_V_flag_1_phi_fu_256_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_dip_wordCount_V_new_1_reg_265pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal dip_wordCount_V_new_1_phi_fu_268_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal cutLength2ipDetect_V_data_V0_update : STD_LOGIC;
    signal parser2loopback_V_data_V1_update : STD_LOGIC;
    signal grp_fu_281_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_292_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_303_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_314_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal parser2icmp_V_data_V1_update : STD_LOGIC;
    signal tmp_5_fu_340_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_s_fu_376_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_293 : BOOLEAN;
    signal ap_sig_bdd_117 : BOOLEAN;
    signal ap_sig_bdd_352 : BOOLEAN;

    component hlsExample_icmpDetection_wordBuffer_Array_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component hlsExample_icmpDetection_wordBuffer_Array_strb_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component hlsExample_icmpDetection_wordBuffer_Array_user_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component hlsExample_icmpDetection_wordBuffer_Array_last_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    wordBuffer_Array_data_V_U : component hlsExample_icmpDetection_wordBuffer_Array_data_V
    generic map (
        DataWidth => 64,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wordBuffer_Array_data_V_address0,
        ce0 => wordBuffer_Array_data_V_ce0,
        we0 => wordBuffer_Array_data_V_we0,
        d0 => wordBuffer_Array_data_V_d0,
        q0 => wordBuffer_Array_data_V_q0);

    wordBuffer_Array_strb_V_U : component hlsExample_icmpDetection_wordBuffer_Array_strb_V
    generic map (
        DataWidth => 8,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wordBuffer_Array_strb_V_address0,
        ce0 => wordBuffer_Array_strb_V_ce0,
        we0 => wordBuffer_Array_strb_V_we0,
        d0 => wordBuffer_Array_strb_V_d0,
        q0 => wordBuffer_Array_strb_V_q0);

    wordBuffer_Array_user_V_U : component hlsExample_icmpDetection_wordBuffer_Array_user_V
    generic map (
        DataWidth => 128,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wordBuffer_Array_user_V_address0,
        ce0 => wordBuffer_Array_user_V_ce0,
        we0 => wordBuffer_Array_user_V_we0,
        d0 => wordBuffer_Array_user_V_d0,
        q0 => wordBuffer_Array_user_V_q0);

    wordBuffer_Array_last_V_U : component hlsExample_icmpDetection_wordBuffer_Array_last_V
    generic map (
        DataWidth => 1,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wordBuffer_Array_last_V_address0,
        ce0 => wordBuffer_Array_last_V_ce0,
        we0 => wordBuffer_Array_last_V_we0,
        d0 => wordBuffer_Array_last_V_d0,
        q0 => wordBuffer_Array_last_V_q0);





    -- the current state (ap_CS_fsm0) of the state machine. --
    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm1) of the state machine. --
    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- dip_leftToWrite_V assign process. --
    dip_leftToWrite_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_117) then
                if (ap_sig_bdd_293) then 
                    dip_leftToWrite_V <= ap_const_lv2_2;
                elsif ((tmp_fu_329_p2 = ap_const_lv1_0)) then 
                    dip_leftToWrite_V <= tmp_5_fu_340_p2;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv2_1 = ipDetectState_load_load_fu_368_p1))) then
                dip_ipProtocol_V <= cutLength2ipDetect_V_data_V_dout(63 downto 56);
                tmp_3_reg_518 <= tmp_3_fu_392_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = dip_wordCount_V_flag_1_phi_fu_256_p4)))) then
                dip_wordCount_V <= dip_wordCount_V_new_1_phi_fu_268_p4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = ipDetectState_flag_2_phi_fu_233_p4)))) then
                ipDetectState <= ipDetectState_new_2_phi_fu_245_p4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                ipDetectState_load_reg_510 <= ipDetectState;
                tmp_data_V_16_reg_490 <= cutLength2ipDetect_V_data_V_dout;
                tmp_last_V_reg_505 <= cutLength2ipDetect_V_last_V_dout;
                tmp_strb_V_reg_495 <= cutLength2ipDetect_V_strb_V_dout;
                tmp_user_V_reg_500 <= cutLength2ipDetect_V_user_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv2_2 = ipDetectState_load_load_fu_368_p1))) then
                tmp_4_reg_514 <= grp_fu_276_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_7_reg_486 <= tmp_7_nbreadreq_fu_106_p6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_reg_478 <= tmp_fu_329_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (tmp_fu_329_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_s_reg_482 <= grp_fu_276_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm1) of the state machine. --
    ap_NS_fsm1_assign_proc : process (ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_bdd_53, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and not(ap_sig_bdd_53))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_bdd_53)))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;

    -- the next state (ap_NS_fsm0) of the state machine. --
    ap_NS_fsm0_assign_proc : process (ap_done_reg, ap_CS_fsm0, ap_sig_bdd_53, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_53, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_253pp0_it0 <= "X";
    ap_reg_phiprechg_dip_wordCount_V_flag_reg_197pp0_it0 <= "X";
    ap_reg_phiprechg_dip_wordCount_V_new_1_reg_265pp0_it0 <= "XX";
    ap_reg_phiprechg_dip_wordCount_V_new_reg_214pp0_it0 <= "XX";
    ap_reg_phiprechg_ipDetectState_flag_1_reg_164pp0_it0 <= "X";
    ap_reg_phiprechg_ipDetectState_flag_2_reg_230pp0_it0 <= "X";
    ap_reg_phiprechg_ipDetectState_new_1_reg_180pp0_it0 <= "XX";
    ap_reg_phiprechg_ipDetectState_new_2_reg_242pp0_it0 <= "XX";
    ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 <= ipDetectState_load_reg_510;

    -- ap_sig_bdd_104 assign process. --
    ap_sig_bdd_104_assign_proc : process(parser2loopback_V_data_V1_status, tmp_reg_478, tmp_s_reg_482, parser2icmp_V_data_V1_status, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518)
    begin
                ap_sig_bdd_104 <= (((parser2loopback_V_data_V1_status = ap_const_logic_0) and (ap_const_lv1_0 = tmp_reg_478) and (ap_const_lv1_0 = tmp_s_reg_482)) or ((ap_const_lv1_0 = tmp_reg_478) and (parser2icmp_V_data_V1_status = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_s_reg_482))) or ((parser2loopback_V_data_V1_status = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_4_reg_514)) or ((parser2icmp_V_data_V1_status = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_4_reg_514))) or ((parser2loopback_V_data_V1_status = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_3_reg_518)) or ((parser2icmp_V_data_V1_status = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_3_reg_518))));
    end process;


    -- ap_sig_bdd_110 assign process. --
    ap_sig_bdd_110_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_110 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    -- ap_sig_bdd_117 assign process. --
    ap_sig_bdd_117_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_53, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_117 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_293 assign process. --
    ap_sig_bdd_293_assign_proc : process(tmp_fu_329_p2, tmp_7_nbreadreq_fu_106_p6, tmp_last_V_fu_364_p1)
    begin
                ap_sig_bdd_293 <= (not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not((ap_const_lv1_0 = tmp_last_V_fu_364_p1)));
    end process;


    -- ap_sig_bdd_34 assign process. --
    ap_sig_bdd_34_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_34 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    -- ap_sig_bdd_352 assign process. --
    ap_sig_bdd_352_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, tmp_fu_329_p2, tmp_7_nbreadreq_fu_106_p6)
    begin
                ap_sig_bdd_352 <= ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)));
    end process;


    -- ap_sig_bdd_53 assign process. --
    ap_sig_bdd_53_assign_proc : process(ap_start, ap_done_reg, cutLength2ipDetect_V_data_V0_status, tmp_fu_329_p2, tmp_7_nbreadreq_fu_106_p6)
    begin
                ap_sig_bdd_53 <= (((cutLength2ipDetect_V_data_V0_status = ap_const_logic_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_st0_fsm1_0 assign process. --
    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_bdd_34)
    begin
        if (ap_sig_bdd_34) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm0_0 assign process. --
    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm1_1 assign process. --
    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_bdd_110)
    begin
        if (ap_sig_bdd_110) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;

    cutLength2ipDetect_V_data_V0_status <= (cutLength2ipDetect_V_data_V_empty_n and cutLength2ipDetect_V_strb_V_empty_n and cutLength2ipDetect_V_user_V_empty_n and cutLength2ipDetect_V_last_V_empty_n);

    -- cutLength2ipDetect_V_data_V0_update assign process. --
    cutLength2ipDetect_V_data_V0_update_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, tmp_fu_329_p2, tmp_7_nbreadreq_fu_106_p6, ap_sig_bdd_53, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_53 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            cutLength2ipDetect_V_data_V0_update <= ap_const_logic_1;
        else 
            cutLength2ipDetect_V_data_V0_update <= ap_const_logic_0;
        end if; 
    end process;

    cutLength2ipDetect_V_data_V_read <= cutLength2ipDetect_V_data_V0_update;
    cutLength2ipDetect_V_last_V_read <= cutLength2ipDetect_V_data_V0_update;
    cutLength2ipDetect_V_strb_V_read <= cutLength2ipDetect_V_data_V0_update;
    cutLength2ipDetect_V_user_V_read <= cutLength2ipDetect_V_data_V0_update;

    -- dip_wordCount_V_flag_1_phi_fu_256_p4 assign process. --
    dip_wordCount_V_flag_1_phi_fu_256_p4_assign_proc : process(tmp_last_V_fu_364_p1, dip_wordCount_V_flag_phi_fu_200_p8, ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_253pp0_it0, ap_sig_bdd_352)
    begin
        if (ap_sig_bdd_352) then
            if ((ap_const_lv1_0 = tmp_last_V_fu_364_p1)) then 
                dip_wordCount_V_flag_1_phi_fu_256_p4 <= dip_wordCount_V_flag_phi_fu_200_p8;
            elsif (not((ap_const_lv1_0 = tmp_last_V_fu_364_p1))) then 
                dip_wordCount_V_flag_1_phi_fu_256_p4 <= ap_const_lv1_1;
            else 
                dip_wordCount_V_flag_1_phi_fu_256_p4 <= ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_253pp0_it0;
            end if;
        else 
            dip_wordCount_V_flag_1_phi_fu_256_p4 <= ap_reg_phiprechg_dip_wordCount_V_flag_1_reg_253pp0_it0;
        end if; 
    end process;


    -- dip_wordCount_V_flag_phi_fu_200_p8 assign process. --
    dip_wordCount_V_flag_phi_fu_200_p8_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, tmp_fu_329_p2, tmp_7_nbreadreq_fu_106_p6, ipDetectState_load_load_fu_368_p1, ap_reg_phiprechg_dip_wordCount_V_flag_reg_197pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and (ap_const_lv2_0 = ipDetectState_load_load_fu_368_p1))) then 
            dip_wordCount_V_flag_phi_fu_200_p8 <= ap_const_lv1_1;
        elsif ((((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not((ap_const_lv2_2 = ipDetectState_load_load_fu_368_p1)) and not((ap_const_lv2_1 = ipDetectState_load_load_fu_368_p1)) and not((ap_const_lv2_0 = ipDetectState_load_load_fu_368_p1))) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and (ap_const_lv2_2 = ipDetectState_load_load_fu_368_p1)) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and (ap_const_lv2_1 = ipDetectState_load_load_fu_368_p1)))) then 
            dip_wordCount_V_flag_phi_fu_200_p8 <= ap_const_lv1_0;
        else 
            dip_wordCount_V_flag_phi_fu_200_p8 <= ap_reg_phiprechg_dip_wordCount_V_flag_reg_197pp0_it0;
        end if; 
    end process;


    -- dip_wordCount_V_new_1_phi_fu_268_p4 assign process. --
    dip_wordCount_V_new_1_phi_fu_268_p4_assign_proc : process(tmp_last_V_fu_364_p1, dip_wordCount_V_new_phi_fu_217_p8, ap_reg_phiprechg_dip_wordCount_V_new_1_reg_265pp0_it0, ap_sig_bdd_352)
    begin
        if (ap_sig_bdd_352) then
            if ((ap_const_lv1_0 = tmp_last_V_fu_364_p1)) then 
                dip_wordCount_V_new_1_phi_fu_268_p4 <= dip_wordCount_V_new_phi_fu_217_p8;
            elsif (not((ap_const_lv1_0 = tmp_last_V_fu_364_p1))) then 
                dip_wordCount_V_new_1_phi_fu_268_p4 <= ap_const_lv2_0;
            else 
                dip_wordCount_V_new_1_phi_fu_268_p4 <= ap_reg_phiprechg_dip_wordCount_V_new_1_reg_265pp0_it0;
            end if;
        else 
            dip_wordCount_V_new_1_phi_fu_268_p4 <= ap_reg_phiprechg_dip_wordCount_V_new_1_reg_265pp0_it0;
        end if; 
    end process;


    -- dip_wordCount_V_new_phi_fu_217_p8 assign process. --
    dip_wordCount_V_new_phi_fu_217_p8_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, tmp_fu_329_p2, tmp_7_nbreadreq_fu_106_p6, ipDetectState_load_load_fu_368_p1, tmp_2_fu_405_p2, ap_reg_phiprechg_dip_wordCount_V_new_reg_214pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and (ap_const_lv2_0 = ipDetectState_load_load_fu_368_p1))) then 
            dip_wordCount_V_new_phi_fu_217_p8 <= tmp_2_fu_405_p2;
        else 
            dip_wordCount_V_new_phi_fu_217_p8 <= ap_reg_phiprechg_dip_wordCount_V_new_reg_214pp0_it0;
        end if; 
    end process;

    grp_fu_276_p2 <= "1" when (dip_ipProtocol_V = ap_const_lv8_1) else "0";
    grp_fu_281_p4 <= wordBuffer_Array_data_V_q0;
    grp_fu_292_p4 <= wordBuffer_Array_strb_V_q0;
    grp_fu_303_p4 <= wordBuffer_Array_user_V_q0;
    grp_fu_314_p4 <= wordBuffer_Array_last_V_q0;

    -- ipDetectState_flag_1_phi_fu_167_p8 assign process. --
    ipDetectState_flag_1_phi_fu_167_p8_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, tmp_fu_329_p2, tmp_7_nbreadreq_fu_106_p6, ipDetectState_load_load_fu_368_p1, ap_reg_phiprechg_ipDetectState_flag_1_reg_164pp0_it0, tmp_1_fu_398_p2)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and (ap_const_lv2_1 = ipDetectState_load_load_fu_368_p1))) then 
            ipDetectState_flag_1_phi_fu_167_p8 <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and (ap_const_lv2_0 = ipDetectState_load_load_fu_368_p1))) then 
            ipDetectState_flag_1_phi_fu_167_p8 <= tmp_1_fu_398_p2;
        elsif ((((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and not((ap_const_lv2_2 = ipDetectState_load_load_fu_368_p1)) and not((ap_const_lv2_1 = ipDetectState_load_load_fu_368_p1)) and not((ap_const_lv2_0 = ipDetectState_load_load_fu_368_p1))) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_fu_329_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_7_nbreadreq_fu_106_p6)) and (ap_const_lv2_2 = ipDetectState_load_load_fu_368_p1)))) then 
            ipDetectState_flag_1_phi_fu_167_p8 <= ap_const_lv1_0;
        else 
            ipDetectState_flag_1_phi_fu_167_p8 <= ap_reg_phiprechg_ipDetectState_flag_1_reg_164pp0_it0;
        end if; 
    end process;


    -- ipDetectState_flag_2_phi_fu_233_p4 assign process. --
    ipDetectState_flag_2_phi_fu_233_p4_assign_proc : process(tmp_last_V_fu_364_p1, ipDetectState_flag_1_phi_fu_167_p8, ap_reg_phiprechg_ipDetectState_flag_2_reg_230pp0_it0, ap_sig_bdd_352)
    begin
        if (ap_sig_bdd_352) then
            if ((ap_const_lv1_0 = tmp_last_V_fu_364_p1)) then 
                ipDetectState_flag_2_phi_fu_233_p4 <= ipDetectState_flag_1_phi_fu_167_p8;
            elsif (not((ap_const_lv1_0 = tmp_last_V_fu_364_p1))) then 
                ipDetectState_flag_2_phi_fu_233_p4 <= ap_const_lv1_1;
            else 
                ipDetectState_flag_2_phi_fu_233_p4 <= ap_reg_phiprechg_ipDetectState_flag_2_reg_230pp0_it0;
            end if;
        else 
            ipDetectState_flag_2_phi_fu_233_p4 <= ap_reg_phiprechg_ipDetectState_flag_2_reg_230pp0_it0;
        end if; 
    end process;

    ipDetectState_load_load_fu_368_p1 <= ipDetectState;

    -- ipDetectState_new_1_phi_fu_183_p8 assign process. --
    ipDetectState_new_1_phi_fu_183_p8_assign_proc : process(ipDetectState_load_load_fu_368_p1, ap_reg_phiprechg_ipDetectState_new_1_reg_180pp0_it0, ap_sig_bdd_352)
    begin
        if (ap_sig_bdd_352) then
            if ((ap_const_lv2_1 = ipDetectState_load_load_fu_368_p1)) then 
                ipDetectState_new_1_phi_fu_183_p8 <= ap_const_lv2_2;
            elsif ((ap_const_lv2_0 = ipDetectState_load_load_fu_368_p1)) then 
                ipDetectState_new_1_phi_fu_183_p8 <= ap_const_lv2_1;
            else 
                ipDetectState_new_1_phi_fu_183_p8 <= ap_reg_phiprechg_ipDetectState_new_1_reg_180pp0_it0;
            end if;
        else 
            ipDetectState_new_1_phi_fu_183_p8 <= ap_reg_phiprechg_ipDetectState_new_1_reg_180pp0_it0;
        end if; 
    end process;


    -- ipDetectState_new_2_phi_fu_245_p4 assign process. --
    ipDetectState_new_2_phi_fu_245_p4_assign_proc : process(tmp_last_V_fu_364_p1, ipDetectState_new_1_phi_fu_183_p8, ap_reg_phiprechg_ipDetectState_new_2_reg_242pp0_it0, ap_sig_bdd_352)
    begin
        if (ap_sig_bdd_352) then
            if ((ap_const_lv1_0 = tmp_last_V_fu_364_p1)) then 
                ipDetectState_new_2_phi_fu_245_p4 <= ipDetectState_new_1_phi_fu_183_p8;
            elsif (not((ap_const_lv1_0 = tmp_last_V_fu_364_p1))) then 
                ipDetectState_new_2_phi_fu_245_p4 <= ap_const_lv2_0;
            else 
                ipDetectState_new_2_phi_fu_245_p4 <= ap_reg_phiprechg_ipDetectState_new_2_reg_242pp0_it0;
            end if;
        else 
            ipDetectState_new_2_phi_fu_245_p4 <= ap_reg_phiprechg_ipDetectState_new_2_reg_242pp0_it0;
        end if; 
    end process;

    p_Result_s_fu_376_p4 <= cutLength2ipDetect_V_data_V_dout(63 downto 56);
    parser2icmp_V_data_V1_status <= (parser2icmp_V_data_V_full_n and parser2icmp_V_strb_V_full_n and parser2icmp_V_user_V_full_n and parser2icmp_V_last_V_full_n);

    -- parser2icmp_V_data_V1_update assign process. --
    parser2icmp_V_data_V1_update_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((ap_const_lv1_0 = tmp_reg_478) and not((ap_const_lv1_0 = tmp_s_reg_482)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_4_reg_514)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_3_reg_518)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2icmp_V_data_V1_update <= ap_const_logic_1;
        else 
            parser2icmp_V_data_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    -- parser2icmp_V_data_V_din assign process. --
    parser2icmp_V_data_V_din_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, wordBuffer_Array_data_V_q0, grp_fu_281_p4)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_4_reg_514)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_3_reg_518)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2icmp_V_data_V_din <= grp_fu_281_p4;
        elsif (((ap_const_lv1_0 = tmp_reg_478) and not((ap_const_lv1_0 = tmp_s_reg_482)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            parser2icmp_V_data_V_din <= wordBuffer_Array_data_V_q0;
        else 
            parser2icmp_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    parser2icmp_V_data_V_write <= parser2icmp_V_data_V1_update;

    -- parser2icmp_V_last_V_din assign process. --
    parser2icmp_V_last_V_din_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, wordBuffer_Array_last_V_q0, grp_fu_314_p4)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_4_reg_514)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_3_reg_518)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2icmp_V_last_V_din <= grp_fu_314_p4;
        elsif (((ap_const_lv1_0 = tmp_reg_478) and not((ap_const_lv1_0 = tmp_s_reg_482)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            parser2icmp_V_last_V_din <= wordBuffer_Array_last_V_q0;
        else 
            parser2icmp_V_last_V_din <= "X";
        end if; 
    end process;

    parser2icmp_V_last_V_write <= parser2icmp_V_data_V1_update;

    -- parser2icmp_V_strb_V_din assign process. --
    parser2icmp_V_strb_V_din_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, wordBuffer_Array_strb_V_q0, grp_fu_292_p4)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_4_reg_514)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_3_reg_518)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2icmp_V_strb_V_din <= grp_fu_292_p4;
        elsif (((ap_const_lv1_0 = tmp_reg_478) and not((ap_const_lv1_0 = tmp_s_reg_482)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            parser2icmp_V_strb_V_din <= wordBuffer_Array_strb_V_q0;
        else 
            parser2icmp_V_strb_V_din <= "XXXXXXXX";
        end if; 
    end process;

    parser2icmp_V_strb_V_write <= parser2icmp_V_data_V1_update;

    -- parser2icmp_V_user_V_din assign process. --
    parser2icmp_V_user_V_din_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, wordBuffer_Array_user_V_q0, grp_fu_303_p4)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_4_reg_514)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_3_reg_518)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2icmp_V_user_V_din <= grp_fu_303_p4;
        elsif (((ap_const_lv1_0 = tmp_reg_478) and not((ap_const_lv1_0 = tmp_s_reg_482)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            parser2icmp_V_user_V_din <= wordBuffer_Array_user_V_q0;
        else 
            parser2icmp_V_user_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    parser2icmp_V_user_V_write <= parser2icmp_V_data_V1_update;
    parser2loopback_V_data_V1_status <= (parser2loopback_V_data_V_full_n and parser2loopback_V_strb_V_full_n and parser2loopback_V_user_V_full_n and parser2loopback_V_last_V_full_n);

    -- parser2loopback_V_data_V1_update assign process. --
    parser2loopback_V_data_V1_update_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((ap_const_lv1_0 = tmp_reg_478) and (ap_const_lv1_0 = tmp_s_reg_482) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_4_reg_514) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_3_reg_518) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2loopback_V_data_V1_update <= ap_const_logic_1;
        else 
            parser2loopback_V_data_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    -- parser2loopback_V_data_V_din assign process. --
    parser2loopback_V_data_V_din_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, wordBuffer_Array_data_V_q0, grp_fu_281_p4)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_4_reg_514) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_3_reg_518) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2loopback_V_data_V_din <= grp_fu_281_p4;
        elsif (((ap_const_lv1_0 = tmp_reg_478) and (ap_const_lv1_0 = tmp_s_reg_482) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            parser2loopback_V_data_V_din <= wordBuffer_Array_data_V_q0;
        else 
            parser2loopback_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    parser2loopback_V_data_V_write <= parser2loopback_V_data_V1_update;

    -- parser2loopback_V_last_V_din assign process. --
    parser2loopback_V_last_V_din_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, wordBuffer_Array_last_V_q0, grp_fu_314_p4)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_4_reg_514) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_3_reg_518) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2loopback_V_last_V_din <= grp_fu_314_p4;
        elsif (((ap_const_lv1_0 = tmp_reg_478) and (ap_const_lv1_0 = tmp_s_reg_482) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            parser2loopback_V_last_V_din <= wordBuffer_Array_last_V_q0;
        else 
            parser2loopback_V_last_V_din <= "X";
        end if; 
    end process;

    parser2loopback_V_last_V_write <= parser2loopback_V_data_V1_update;

    -- parser2loopback_V_strb_V_din assign process. --
    parser2loopback_V_strb_V_din_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, wordBuffer_Array_strb_V_q0, grp_fu_292_p4)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_4_reg_514) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_3_reg_518) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2loopback_V_strb_V_din <= grp_fu_292_p4;
        elsif (((ap_const_lv1_0 = tmp_reg_478) and (ap_const_lv1_0 = tmp_s_reg_482) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            parser2loopback_V_strb_V_din <= wordBuffer_Array_strb_V_q0;
        else 
            parser2loopback_V_strb_V_din <= "XXXXXXXX";
        end if; 
    end process;

    parser2loopback_V_strb_V_write <= parser2loopback_V_data_V1_update;

    -- parser2loopback_V_user_V_din assign process. --
    parser2loopback_V_user_V_din_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_s_reg_482, tmp_7_reg_486, ipDetectState_load_reg_510, tmp_4_reg_514, tmp_3_reg_518, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, wordBuffer_Array_user_V_q0, grp_fu_303_p4)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_4_reg_514) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_3_reg_518) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            parser2loopback_V_user_V_din <= grp_fu_303_p4;
        elsif (((ap_const_lv1_0 = tmp_reg_478) and (ap_const_lv1_0 = tmp_s_reg_482) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            parser2loopback_V_user_V_din <= wordBuffer_Array_user_V_q0;
        else 
            parser2loopback_V_user_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    parser2loopback_V_user_V_write <= parser2loopback_V_data_V1_update;
    tmp_1_fu_398_p2 <= "1" when (dip_wordCount_V = ap_const_lv2_1) else "0";
    tmp_2_fu_405_p2 <= std_logic_vector(unsigned(dip_wordCount_V) + unsigned(ap_const_lv2_1));
    tmp_3_fu_392_p2 <= "1" when (p_Result_s_fu_376_p4 = ap_const_lv8_1) else "0";
    tmp_5_fu_340_p2 <= std_logic_vector(unsigned(dip_leftToWrite_V) + unsigned(ap_const_lv2_3));
    tmp_7_nbreadreq_fu_106_p6 <= (0=>(cutLength2ipDetect_V_data_V_empty_n and cutLength2ipDetect_V_strb_V_empty_n and cutLength2ipDetect_V_user_V_empty_n and cutLength2ipDetect_V_last_V_empty_n), others=>'-');
    tmp_fu_329_p2 <= "1" when (dip_leftToWrite_V = ap_const_lv2_0) else "0";
    tmp_last_V_fu_364_p1 <= cutLength2ipDetect_V_last_V_dout;
    wordBuffer_Array_data_V_address0 <= ap_const_lv1_1;

    -- wordBuffer_Array_data_V_ce0 assign process. --
    wordBuffer_Array_data_V_ce0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)) or ((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            wordBuffer_Array_data_V_ce0 <= ap_const_logic_1;
        else 
            wordBuffer_Array_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- wordBuffer_Array_data_V_d0 assign process. --
    wordBuffer_Array_data_V_d0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, tmp_data_V_16_reg_490)
    begin
        if (((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            wordBuffer_Array_data_V_d0 <= ap_const_lv64_0;
        elsif (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)))) then 
            wordBuffer_Array_data_V_d0 <= tmp_data_V_16_reg_490;
        else 
            wordBuffer_Array_data_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- wordBuffer_Array_data_V_we0 assign process. --
    wordBuffer_Array_data_V_we0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)) or ((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            wordBuffer_Array_data_V_we0 <= ap_const_logic_1;
        else 
            wordBuffer_Array_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    wordBuffer_Array_last_V_address0 <= ap_const_lv1_1;

    -- wordBuffer_Array_last_V_ce0 assign process. --
    wordBuffer_Array_last_V_ce0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)) or ((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            wordBuffer_Array_last_V_ce0 <= ap_const_logic_1;
        else 
            wordBuffer_Array_last_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- wordBuffer_Array_last_V_d0 assign process. --
    wordBuffer_Array_last_V_d0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, tmp_last_V_reg_505)
    begin
        if (((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            wordBuffer_Array_last_V_d0 <= ap_const_lv1_0;
        elsif (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)))) then 
            wordBuffer_Array_last_V_d0 <= tmp_last_V_reg_505;
        else 
            wordBuffer_Array_last_V_d0 <= "X";
        end if; 
    end process;


    -- wordBuffer_Array_last_V_we0 assign process. --
    wordBuffer_Array_last_V_we0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)) or ((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            wordBuffer_Array_last_V_we0 <= ap_const_logic_1;
        else 
            wordBuffer_Array_last_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    wordBuffer_Array_strb_V_address0 <= ap_const_lv1_1;

    -- wordBuffer_Array_strb_V_ce0 assign process. --
    wordBuffer_Array_strb_V_ce0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)) or ((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            wordBuffer_Array_strb_V_ce0 <= ap_const_logic_1;
        else 
            wordBuffer_Array_strb_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- wordBuffer_Array_strb_V_d0 assign process. --
    wordBuffer_Array_strb_V_d0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, tmp_strb_V_reg_495)
    begin
        if (((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            wordBuffer_Array_strb_V_d0 <= ap_const_lv8_0;
        elsif (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)))) then 
            wordBuffer_Array_strb_V_d0 <= tmp_strb_V_reg_495;
        else 
            wordBuffer_Array_strb_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    -- wordBuffer_Array_strb_V_we0 assign process. --
    wordBuffer_Array_strb_V_we0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)) or ((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            wordBuffer_Array_strb_V_we0 <= ap_const_logic_1;
        else 
            wordBuffer_Array_strb_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    wordBuffer_Array_user_V_address0 <= ap_const_lv1_1;

    -- wordBuffer_Array_user_V_ce0 assign process. --
    wordBuffer_Array_user_V_ce0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)) or ((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            wordBuffer_Array_user_V_ce0 <= ap_const_logic_1;
        else 
            wordBuffer_Array_user_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- wordBuffer_Array_user_V_d0 assign process. --
    wordBuffer_Array_user_V_d0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, tmp_user_V_reg_500)
    begin
        if (((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
            wordBuffer_Array_user_V_d0 <= ap_const_lv128_lc_1;
        elsif (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)))) then 
            wordBuffer_Array_user_V_d0 <= tmp_user_V_reg_500;
        else 
            wordBuffer_Array_user_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- wordBuffer_Array_user_V_we0 assign process. --
    wordBuffer_Array_user_V_we0_assign_proc : process(ap_done_reg, tmp_reg_478, tmp_7_reg_486, ipDetectState_load_reg_510, ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ipDetectState_load_reg_510 = ap_const_lv2_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or (not((ap_const_lv1_0 = tmp_reg_478)) and not((ap_const_lv1_0 = tmp_7_reg_486)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (ap_reg_ppstg_ipDetectState_load_reg_510_pp0_it0 = ap_const_lv2_0)) or ((ap_const_lv1_0 = tmp_reg_478) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            wordBuffer_Array_user_V_we0 <= ap_const_logic_1;
        else 
            wordBuffer_Array_user_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
