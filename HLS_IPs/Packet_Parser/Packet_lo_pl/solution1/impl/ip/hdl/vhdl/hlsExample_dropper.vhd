-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hlsExample_dropper is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    validBuffer_V_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    validBuffer_V_V_empty_n : IN STD_LOGIC;
    validBuffer_V_V_read : OUT STD_LOGIC;
    cr2dropper_V_data_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    cr2dropper_V_data_V_empty_n : IN STD_LOGIC;
    cr2dropper_V_data_V_read : OUT STD_LOGIC;
    cr2dropper_V_strb_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    cr2dropper_V_strb_V_empty_n : IN STD_LOGIC;
    cr2dropper_V_strb_V_read : OUT STD_LOGIC;
    cr2dropper_V_user_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    cr2dropper_V_user_V_empty_n : IN STD_LOGIC;
    cr2dropper_V_user_V_read : OUT STD_LOGIC;
    cr2dropper_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    cr2dropper_V_last_V_empty_n : IN STD_LOGIC;
    cr2dropper_V_last_V_read : OUT STD_LOGIC;
    drop2checksum_V_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    drop2checksum_V_data_V_full_n : IN STD_LOGIC;
    drop2checksum_V_data_V_write : OUT STD_LOGIC;
    drop2checksum_V_strb_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    drop2checksum_V_strb_V_full_n : IN STD_LOGIC;
    drop2checksum_V_strb_V_write : OUT STD_LOGIC;
    drop2checksum_V_user_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    drop2checksum_V_user_V_full_n : IN STD_LOGIC;
    drop2checksum_V_user_V_write : OUT STD_LOGIC;
    drop2checksum_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    drop2checksum_V_last_V_full_n : IN STD_LOGIC;
    drop2checksum_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of hlsExample_dropper is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_bdd_34 : BOOLEAN;
    signal cr2dropper_V_data_V0_status : STD_LOGIC;
    signal grp_nbreadreq_fu_52_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_nbreadreq_fu_78_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_74 : BOOLEAN;
    signal drop2checksum_V_data_V1_status : STD_LOGIC;
    signal dropState_load_reg_166 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_178 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_187 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_191 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_195 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_104 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_bdd_110 : BOOLEAN;
    signal dropState : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal reg_141 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_151 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_119_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_182 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_read_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_18_reg_199 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_storemerge_reg_108pp0_it0 : STD_LOGIC_VECTOR (1 downto 0);
    signal storemerge_phi_fu_111_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal cr2dropper_V_data_V0_update : STD_LOGIC;
    signal drop2checksum_V_data_V1_update : STD_LOGIC;
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_85 : BOOLEAN;
    signal ap_sig_bdd_102 : BOOLEAN;
    signal ap_sig_bdd_218 : BOOLEAN;
    signal ap_sig_bdd_239 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm0) of the state machine. --
    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm1) of the state machine. --
    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- dropState assign process. --
    dropState_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_nbreadreq_fu_78_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
                dropState <= storemerge_phi_fu_111_p4;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (dropState = ap_const_lv2_2) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = grp_fu_119_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = grp_fu_119_p1))))) then 
                dropState <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                dropState_load_reg_166 <= dropState;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_nbreadreq_fu_78_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))))) then
                reg_141 <= cr2dropper_V_data_V_dout;
                reg_146 <= cr2dropper_V_strb_V_dout;
                reg_151 <= cr2dropper_V_user_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (dropState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_19_reg_178 <= grp_nbreadreq_fu_52_p6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_21_reg_191 <= tmp_21_nbreadreq_fu_78_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_nbreadreq_fu_78_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_V_reg_195 <= validBuffer_V_V_dout;
                tmp_last_V_18_reg_199 <= cr2dropper_V_last_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_last_V_reg_182 <= cr2dropper_V_last_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (dropState = ap_const_lv2_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_reg_187 <= grp_nbreadreq_fu_52_p6;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm0) of the state machine. --
    ap_NS_fsm0_assign_proc : process (ap_done_reg, ap_CS_fsm0, ap_sig_bdd_74, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;

    -- the next state (ap_NS_fsm1) of the state machine. --
    ap_NS_fsm1_assign_proc : process (ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_bdd_74, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and not(ap_sig_bdd_74))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)) and (not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_bdd_74)))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_74, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_storemerge_reg_108pp0_it0 <= "XX";

    -- ap_sig_bdd_102 assign process. --
    ap_sig_bdd_102_assign_proc : process(dropState_load_reg_166, tmp_reg_187, tmp_21_reg_191, tmp_V_reg_195)
    begin
                ap_sig_bdd_102 <= ((ap_const_lv2_0 = dropState_load_reg_166) and not((ap_const_lv1_0 = tmp_reg_187)) and not((ap_const_lv1_0 = tmp_21_reg_191)) and not((ap_const_lv1_0 = tmp_V_reg_195)));
    end process;


    -- ap_sig_bdd_104 assign process. --
    ap_sig_bdd_104_assign_proc : process(drop2checksum_V_data_V1_status, dropState_load_reg_166, tmp_19_reg_178, tmp_reg_187, tmp_21_reg_191, tmp_V_reg_195)
    begin
                ap_sig_bdd_104 <= (((drop2checksum_V_data_V1_status = ap_const_logic_0) and (ap_const_lv2_1 = dropState_load_reg_166) and not((ap_const_lv1_0 = tmp_19_reg_178))) or ((drop2checksum_V_data_V1_status = ap_const_logic_0) and (ap_const_lv2_0 = dropState_load_reg_166) and not((ap_const_lv1_0 = tmp_reg_187)) and not((ap_const_lv1_0 = tmp_21_reg_191)) and not((ap_const_lv1_0 = tmp_V_reg_195))));
    end process;


    -- ap_sig_bdd_110 assign process. --
    ap_sig_bdd_110_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_110 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    -- ap_sig_bdd_218 assign process. --
    ap_sig_bdd_218_assign_proc : process(ap_done_reg, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_218 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104)));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_239 assign process. --
    ap_sig_bdd_239_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, grp_nbreadreq_fu_52_p6, tmp_21_nbreadreq_fu_78_p3, dropState)
    begin
                ap_sig_bdd_239 <= ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_nbreadreq_fu_78_p3)));
    end process;


    -- ap_sig_bdd_34 assign process. --
    ap_sig_bdd_34_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_34 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    -- ap_sig_bdd_74 assign process. --
    ap_sig_bdd_74_assign_proc : process(ap_start, ap_done_reg, cr2dropper_V_data_V0_status, grp_nbreadreq_fu_52_p6, validBuffer_V_V_empty_n, tmp_21_nbreadreq_fu_78_p3, dropState)
    begin
                ap_sig_bdd_74 <= (((cr2dropper_V_data_V0_status = ap_const_logic_0) and (dropState = ap_const_lv2_2) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0))) or ((cr2dropper_V_data_V0_status = ap_const_logic_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_1)) or (not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (validBuffer_V_V_empty_n = ap_const_logic_0) and (dropState = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_nbreadreq_fu_78_p3))) or ((cr2dropper_V_data_V0_status = ap_const_logic_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_nbreadreq_fu_78_p3))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_85 assign process. --
    ap_sig_bdd_85_assign_proc : process(dropState_load_reg_166, tmp_19_reg_178)
    begin
                ap_sig_bdd_85 <= ((ap_const_lv2_1 = dropState_load_reg_166) and not((ap_const_lv1_0 = tmp_19_reg_178)));
    end process;


    -- ap_sig_cseq_ST_st0_fsm1_0 assign process. --
    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_bdd_34)
    begin
        if (ap_sig_bdd_34) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm0_0 assign process. --
    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm1_1 assign process. --
    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_bdd_110)
    begin
        if (ap_sig_bdd_110) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;

    cr2dropper_V_data_V0_status <= (cr2dropper_V_data_V_empty_n and cr2dropper_V_strb_V_empty_n and cr2dropper_V_user_V_empty_n and cr2dropper_V_last_V_empty_n);

    -- cr2dropper_V_data_V0_update assign process. --
    cr2dropper_V_data_V0_update_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, grp_nbreadreq_fu_52_p6, tmp_21_nbreadreq_fu_78_p3, ap_sig_bdd_74, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, dropState)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_nbreadreq_fu_78_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (dropState = ap_const_lv2_2) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))))) then 
            cr2dropper_V_data_V0_update <= ap_const_logic_1;
        else 
            cr2dropper_V_data_V0_update <= ap_const_logic_0;
        end if; 
    end process;

    cr2dropper_V_data_V_read <= cr2dropper_V_data_V0_update;
    cr2dropper_V_last_V_read <= cr2dropper_V_data_V0_update;
    cr2dropper_V_strb_V_read <= cr2dropper_V_data_V0_update;
    cr2dropper_V_user_V_read <= cr2dropper_V_data_V0_update;
    drop2checksum_V_data_V1_status <= (drop2checksum_V_data_V_full_n and drop2checksum_V_strb_V_full_n and drop2checksum_V_user_V_full_n and drop2checksum_V_last_V_full_n);

    -- drop2checksum_V_data_V1_update assign process. --
    drop2checksum_V_data_V1_update_assign_proc : process(ap_done_reg, dropState_load_reg_166, tmp_19_reg_178, tmp_reg_187, tmp_21_reg_191, tmp_V_reg_195, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((ap_const_lv2_1 = dropState_load_reg_166) and not((ap_const_lv1_0 = tmp_19_reg_178)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))) or ((ap_const_lv2_0 = dropState_load_reg_166) and not((ap_const_lv1_0 = tmp_reg_187)) and not((ap_const_lv1_0 = tmp_21_reg_191)) and not((ap_const_lv1_0 = tmp_V_reg_195)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_104))))) then 
            drop2checksum_V_data_V1_update <= ap_const_logic_1;
        else 
            drop2checksum_V_data_V1_update <= ap_const_logic_0;
        end if; 
    end process;

    drop2checksum_V_data_V_din <= reg_141;
    drop2checksum_V_data_V_write <= drop2checksum_V_data_V1_update;

    -- drop2checksum_V_last_V_din assign process. --
    drop2checksum_V_last_V_din_assign_proc : process(tmp_last_V_reg_182, tmp_last_V_18_reg_199, ap_sig_bdd_85, ap_sig_bdd_102, ap_sig_bdd_218)
    begin
        if (ap_sig_bdd_218) then
            if (ap_sig_bdd_102) then 
                drop2checksum_V_last_V_din <= tmp_last_V_18_reg_199;
            elsif (ap_sig_bdd_85) then 
                drop2checksum_V_last_V_din <= tmp_last_V_reg_182;
            else 
                drop2checksum_V_last_V_din <= "X";
            end if;
        else 
            drop2checksum_V_last_V_din <= "X";
        end if; 
    end process;

    drop2checksum_V_last_V_write <= drop2checksum_V_data_V1_update;
    drop2checksum_V_strb_V_din <= reg_146;
    drop2checksum_V_strb_V_write <= drop2checksum_V_data_V1_update;
    drop2checksum_V_user_V_din <= reg_151;
    drop2checksum_V_user_V_write <= drop2checksum_V_data_V1_update;
    grp_fu_119_p1 <= cr2dropper_V_last_V_dout;
    grp_nbreadreq_fu_52_p6 <= (0=>(cr2dropper_V_data_V_empty_n and cr2dropper_V_strb_V_empty_n and cr2dropper_V_user_V_empty_n and cr2dropper_V_last_V_empty_n), others=>'-');

    -- storemerge_phi_fu_111_p4 assign process. --
    storemerge_phi_fu_111_p4_assign_proc : process(tmp_V_read_fu_86_p2, ap_reg_phiprechg_storemerge_reg_108pp0_it0, ap_sig_bdd_239)
    begin
        if (ap_sig_bdd_239) then
            if ((ap_const_lv1_0 = tmp_V_read_fu_86_p2)) then 
                storemerge_phi_fu_111_p4 <= ap_const_lv2_2;
            elsif (not((ap_const_lv1_0 = tmp_V_read_fu_86_p2))) then 
                storemerge_phi_fu_111_p4 <= ap_const_lv2_1;
            else 
                storemerge_phi_fu_111_p4 <= ap_reg_phiprechg_storemerge_reg_108pp0_it0;
            end if;
        else 
            storemerge_phi_fu_111_p4 <= ap_reg_phiprechg_storemerge_reg_108pp0_it0;
        end if; 
    end process;

    tmp_21_nbreadreq_fu_78_p3 <= (0=>validBuffer_V_V_empty_n, others=>'-');
    tmp_V_read_fu_86_p2 <= validBuffer_V_V_dout;

    -- validBuffer_V_V_read assign process. --
    validBuffer_V_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, grp_nbreadreq_fu_52_p6, tmp_21_nbreadreq_fu_78_p3, ap_sig_bdd_74, ap_sig_bdd_104, ap_sig_cseq_ST_st2_fsm1_1, dropState)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_52_p6 = ap_const_lv1_0)) and (dropState = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_nbreadreq_fu_78_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (ap_sig_bdd_104 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            validBuffer_V_V_read <= ap_const_logic_1;
        else 
            validBuffer_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
