-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hlsExample_ethernetDetection is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inData_TVALID : IN STD_LOGIC;
    inData_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    inData_TREADY : OUT STD_LOGIC;
    inData_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    inData_TUSER : IN STD_LOGIC_VECTOR (127 downto 0);
    inData_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    parser2arp_V_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    parser2arp_V_data_V_full_n : IN STD_LOGIC;
    parser2arp_V_data_V_write : OUT STD_LOGIC;
    parser2arp_V_strb_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    parser2arp_V_strb_V_full_n : IN STD_LOGIC;
    parser2arp_V_strb_V_write : OUT STD_LOGIC;
    parser2arp_V_user_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    parser2arp_V_user_V_full_n : IN STD_LOGIC;
    parser2arp_V_user_V_write : OUT STD_LOGIC;
    parser2arp_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    parser2arp_V_last_V_full_n : IN STD_LOGIC;
    parser2arp_V_last_V_write : OUT STD_LOGIC;
    macDetect2lengthCut_V_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    macDetect2lengthCut_V_data_V_full_n : IN STD_LOGIC;
    macDetect2lengthCut_V_data_V_write : OUT STD_LOGIC;
    macDetect2lengthCut_V_strb_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    macDetect2lengthCut_V_strb_V_full_n : IN STD_LOGIC;
    macDetect2lengthCut_V_strb_V_write : OUT STD_LOGIC;
    macDetect2lengthCut_V_user_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    macDetect2lengthCut_V_user_V_full_n : IN STD_LOGIC;
    macDetect2lengthCut_V_user_V_write : OUT STD_LOGIC;
    macDetect2lengthCut_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    macDetect2lengthCut_V_last_V_full_n : IN STD_LOGIC;
    macDetect2lengthCut_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of hlsExample_ethernetDetection is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_806 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000110";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_bdd_34 : BOOLEAN;
    signal arpDetectState_load_load_fu_194_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nbreadreq_fu_86_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_63 : BOOLEAN;
    signal macDetect2lengthCut_V_data_V1_status : STD_LOGIC;
    signal arpDetectState_load_reg_290 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal parser2arp_V_data_V1_status : STD_LOGIC;
    signal tmp_9_reg_326 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_334 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_338 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_346 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_350 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_128 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_bdd_134 : BOOLEAN;
    signal arpDetectState : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal dmp_prevWord_data_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dmp_prevWord_strb_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal dmp_prevWord_user_V : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal dmp_prevWord_last_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dmp_macType_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal tmp_data_V_19_reg_294 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_strb_V_16_reg_300 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_15_reg_306 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_last_V_16_reg_312 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_166_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal macDetect2lengthCut_V_data_V1_update : STD_LOGIC;
    signal parser2arp_V_data_V1_update : STD_LOGIC;
    signal p_Result_s_83_fu_252_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_fu_242_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_232_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_259 : BOOLEAN;
    signal ap_sig_bdd_52 : BOOLEAN;
    signal ap_sig_bdd_56 : BOOLEAN;
    signal ap_sig_bdd_141 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm0) of the state machine. --
    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm1) of the state machine. --
    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- arpDetectState assign process. --
    arpDetectState_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_141) then
                if (ap_sig_bdd_56) then 
                    arpDetectState <= ap_const_lv2_1;
                elsif (ap_sig_bdd_52) then 
                    arpDetectState <= ap_const_lv2_2;
                elsif (ap_sig_bdd_259) then 
                    arpDetectState <= ap_const_lv2_3;
                elsif ((arpDetectState_load_load_fu_194_p1 = ap_const_lv2_3)) then 
                    arpDetectState <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                arpDetectState_load_reg_290 <= arpDetectState;
                tmp_data_V_19_reg_294 <= dmp_prevWord_data_V;
                tmp_last_V_16_reg_312 <= dmp_prevWord_last_V;
                tmp_strb_V_16_reg_300 <= dmp_prevWord_strb_V;
                tmp_user_V_15_reg_306 <= dmp_prevWord_user_V;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                dmp_macType_V <= p_Result_s_83_fu_252_p3;
                tmp_6_reg_346 <= tmp_6_fu_266_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (arpDetectState = ap_const_lv2_2) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))))) then
                dmp_prevWord_data_V <= inData_TDATA;
                dmp_prevWord_last_V <= inData_TLAST;
                dmp_prevWord_strb_V <= inData_TSTRB;
                dmp_prevWord_user_V <= inData_TUSER;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (arpDetectState_load_load_fu_194_p1 = ap_const_lv2_3) and (ap_const_lv1_0 = grp_fu_144_p2))) then
                tmp_1_reg_322 <= grp_fu_149_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv1_0 = tmp_6_fu_266_p2))) then
                tmp_2_reg_350 <= tmp_2_fu_272_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (arpDetectState = ap_const_lv2_2) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv1_0 = grp_fu_144_p2))) then
                tmp_3_reg_338 <= grp_fu_149_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (arpDetectState = ap_const_lv2_2) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_7_reg_334 <= grp_fu_144_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (arpDetectState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_8_reg_342 <= grp_nbreadreq_fu_86_p6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (arpDetectState = ap_const_lv2_2) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                tmp_9_reg_326 <= grp_nbreadreq_fu_86_p6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (arpDetectState_load_load_fu_194_p1 = ap_const_lv2_3))) then
                tmp_s_reg_318 <= grp_fu_144_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm0) of the state machine. --
    ap_NS_fsm0_assign_proc : process (ap_done_reg, ap_CS_fsm0, ap_sig_bdd_63, ap_sig_bdd_128, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;

    -- the next state (ap_NS_fsm1) of the state machine. --
    ap_NS_fsm1_assign_proc : process (ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_bdd_63, ap_sig_bdd_128, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128)) and not(ap_sig_bdd_63))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128)) and (not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_bdd_63)))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_bdd_128, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_63, ap_sig_bdd_128, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_128 assign process. --
    ap_sig_bdd_128_assign_proc : process(macDetect2lengthCut_V_data_V1_status, arpDetectState_load_reg_290, tmp_s_reg_318, tmp_1_reg_322, parser2arp_V_data_V1_status, tmp_9_reg_326, tmp_7_reg_334, tmp_3_reg_338, tmp_8_reg_342, tmp_6_reg_346, tmp_2_reg_350)
    begin
                ap_sig_bdd_128 <= (((macDetect2lengthCut_V_data_V1_status = ap_const_logic_0) and (arpDetectState_load_reg_290 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_s_reg_318) and not((ap_const_lv1_0 = tmp_1_reg_322))) or ((arpDetectState_load_reg_290 = ap_const_lv2_3) and (parser2arp_V_data_V1_status = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_s_reg_318))) or ((macDetect2lengthCut_V_data_V1_status = ap_const_logic_0) and (ap_const_lv2_2 = arpDetectState_load_reg_290) and not((ap_const_lv1_0 = tmp_9_reg_326)) and (ap_const_lv1_0 = tmp_7_reg_334) and not((ap_const_lv1_0 = tmp_3_reg_338))) or ((parser2arp_V_data_V1_status = ap_const_logic_0) and (ap_const_lv2_2 = arpDetectState_load_reg_290) and not((ap_const_lv1_0 = tmp_9_reg_326)) and not((ap_const_lv1_0 = tmp_7_reg_334))) or ((macDetect2lengthCut_V_data_V1_status = ap_const_logic_0) and (ap_const_lv2_1 = arpDetectState_load_reg_290) and not((ap_const_lv1_0 = tmp_8_reg_342)) and (ap_const_lv1_0 = tmp_6_reg_346) and not((ap_const_lv1_0 = tmp_2_reg_350))) or ((parser2arp_V_data_V1_status = ap_const_logic_0) and (ap_const_lv2_1 = arpDetectState_load_reg_290) and not((ap_const_lv1_0 = tmp_8_reg_342)) and not((ap_const_lv1_0 = tmp_6_reg_346))));
    end process;


    -- ap_sig_bdd_134 assign process. --
    ap_sig_bdd_134_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_134 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    -- ap_sig_bdd_141 assign process. --
    ap_sig_bdd_141_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_63, ap_sig_bdd_128, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_141 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_259 assign process. --
    ap_sig_bdd_259_assign_proc : process(grp_nbreadreq_fu_86_p6, arpDetectState, grp_fu_166_p1)
    begin
                ap_sig_bdd_259 <= ((arpDetectState = ap_const_lv2_2) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and not((ap_const_lv1_0 = grp_fu_166_p1)));
    end process;


    -- ap_sig_bdd_34 assign process. --
    ap_sig_bdd_34_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_34 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    -- ap_sig_bdd_52 assign process. --
    ap_sig_bdd_52_assign_proc : process(grp_nbreadreq_fu_86_p6, arpDetectState)
    begin
                ap_sig_bdd_52 <= (not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_1));
    end process;


    -- ap_sig_bdd_56 assign process. --
    ap_sig_bdd_56_assign_proc : process(grp_nbreadreq_fu_86_p6, arpDetectState)
    begin
                ap_sig_bdd_56 <= (not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_0));
    end process;


    -- ap_sig_bdd_63 assign process. --
    ap_sig_bdd_63_assign_proc : process(ap_start, ap_done_reg, inData_TVALID, grp_nbreadreq_fu_86_p6, arpDetectState)
    begin
                ap_sig_bdd_63 <= (((inData_TVALID = ap_const_logic_0) and (arpDetectState = ap_const_lv2_2) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0))) or ((inData_TVALID = ap_const_logic_0) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_1)) or ((inData_TVALID = ap_const_logic_0) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_0)) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_st0_fsm1_0 assign process. --
    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_bdd_34)
    begin
        if (ap_sig_bdd_34) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm0_0 assign process. --
    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm1_1 assign process. --
    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_bdd_134)
    begin
        if (ap_sig_bdd_134) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;

    arpDetectState_load_load_fu_194_p1 <= arpDetectState;
    grp_fu_144_p2 <= "1" when (dmp_macType_V = ap_const_lv16_806) else "0";
    grp_fu_149_p2 <= "1" when (dmp_macType_V = ap_const_lv16_800) else "0";
    grp_fu_166_p1 <= inData_TLAST;
    grp_nbreadreq_fu_86_p6 <= (0=>(inData_TVALID), others=>'-');

    -- inData_TREADY assign process. --
    inData_TREADY_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, grp_nbreadreq_fu_86_p6, ap_sig_bdd_63, ap_sig_bdd_128, ap_sig_cseq_ST_st2_fsm1_1, arpDetectState)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (arpDetectState = ap_const_lv2_2) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((grp_nbreadreq_fu_86_p6 = ap_const_lv1_0)) and (arpDetectState = ap_const_lv2_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_128 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))))) then 
            inData_TREADY <= ap_const_logic_1;
        else 
            inData_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    macDetect2lengthCut_V_data_V1_status <= (macDetect2lengthCut_V_data_V_full_n and macDetect2lengthCut_V_strb_V_full_n and macDetect2lengthCut_V_user_V_full_n and macDetect2lengthCut_V_last_V_full_n);

    -- macDetect2lengthCut_V_data_V1_update assign process. --
    macDetect2lengthCut_V_data_V1_update_assign_proc : process(ap_done_reg, arpDetectState_load_reg_290, tmp_s_reg_318, tmp_1_reg_322, tmp_9_reg_326, tmp_7_reg_334, tmp_3_reg_338, tmp_8_reg_342, tmp_6_reg_346, tmp_2_reg_350, ap_sig_bdd_128, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((arpDetectState_load_reg_290 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_s_reg_318) and not((ap_const_lv1_0 = tmp_1_reg_322)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128))) or ((ap_const_lv2_2 = arpDetectState_load_reg_290) and not((ap_const_lv1_0 = tmp_9_reg_326)) and (ap_const_lv1_0 = tmp_7_reg_334) and not((ap_const_lv1_0 = tmp_3_reg_338)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128))) or ((ap_const_lv2_1 = arpDetectState_load_reg_290) and not((ap_const_lv1_0 = tmp_8_reg_342)) and (ap_const_lv1_0 = tmp_6_reg_346) and not((ap_const_lv1_0 = tmp_2_reg_350)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128))))) then 
            macDetect2lengthCut_V_data_V1_update <= ap_const_logic_1;
        else 
            macDetect2lengthCut_V_data_V1_update <= ap_const_logic_0;
        end if; 
    end process;

    macDetect2lengthCut_V_data_V_din <= tmp_data_V_19_reg_294;
    macDetect2lengthCut_V_data_V_write <= macDetect2lengthCut_V_data_V1_update;
    macDetect2lengthCut_V_last_V_din <= tmp_last_V_16_reg_312;
    macDetect2lengthCut_V_last_V_write <= macDetect2lengthCut_V_data_V1_update;
    macDetect2lengthCut_V_strb_V_din <= tmp_strb_V_16_reg_300;
    macDetect2lengthCut_V_strb_V_write <= macDetect2lengthCut_V_data_V1_update;
    macDetect2lengthCut_V_user_V_din <= tmp_user_V_15_reg_306;
    macDetect2lengthCut_V_user_V_write <= macDetect2lengthCut_V_data_V1_update;
    p_Result_1_fu_242_p4 <= inData_TDATA(39 downto 32);
    p_Result_s_83_fu_252_p3 <= (p_Result_1_fu_242_p4 & p_Result_s_fu_232_p4);
    p_Result_s_fu_232_p4 <= inData_TDATA(47 downto 40);
    parser2arp_V_data_V1_status <= (parser2arp_V_data_V_full_n and parser2arp_V_strb_V_full_n and parser2arp_V_user_V_full_n and parser2arp_V_last_V_full_n);

    -- parser2arp_V_data_V1_update assign process. --
    parser2arp_V_data_V1_update_assign_proc : process(ap_done_reg, arpDetectState_load_reg_290, tmp_s_reg_318, tmp_9_reg_326, tmp_7_reg_334, tmp_8_reg_342, tmp_6_reg_346, ap_sig_bdd_128, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((arpDetectState_load_reg_290 = ap_const_lv2_3) and not((ap_const_lv1_0 = tmp_s_reg_318)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128))) or ((ap_const_lv2_2 = arpDetectState_load_reg_290) and not((ap_const_lv1_0 = tmp_9_reg_326)) and not((ap_const_lv1_0 = tmp_7_reg_334)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128))) or ((ap_const_lv2_1 = arpDetectState_load_reg_290) and not((ap_const_lv1_0 = tmp_8_reg_342)) and not((ap_const_lv1_0 = tmp_6_reg_346)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_128))))) then 
            parser2arp_V_data_V1_update <= ap_const_logic_1;
        else 
            parser2arp_V_data_V1_update <= ap_const_logic_0;
        end if; 
    end process;

    parser2arp_V_data_V_din <= tmp_data_V_19_reg_294;
    parser2arp_V_data_V_write <= parser2arp_V_data_V1_update;
    parser2arp_V_last_V_din <= tmp_last_V_16_reg_312;
    parser2arp_V_last_V_write <= parser2arp_V_data_V1_update;
    parser2arp_V_strb_V_din <= tmp_strb_V_16_reg_300;
    parser2arp_V_strb_V_write <= parser2arp_V_data_V1_update;
    parser2arp_V_user_V_din <= tmp_user_V_15_reg_306;
    parser2arp_V_user_V_write <= parser2arp_V_data_V1_update;
    tmp_2_fu_272_p2 <= "1" when (p_Result_s_83_fu_252_p3 = ap_const_lv16_800) else "0";
    tmp_6_fu_266_p2 <= "1" when (p_Result_s_83_fu_252_p3 = ap_const_lv16_806) else "0";
end behav;
