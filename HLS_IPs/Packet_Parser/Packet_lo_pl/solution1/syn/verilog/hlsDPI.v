// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hlsDPI,hls_ip_2015_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=16.885000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=12,HLS_SYN_DSP=0,HLS_SYN_FF=1323,HLS_SYN_LUT=737}" *)

module hlsDPI (
        inData_TDATA,
        inData_TSTRB,
        inData_TUSER,
        inData_TLAST,
        outData_TDATA,
        outData_TSTRB,
        outData_TUSER,
        outData_TLAST,
        ap_clk,
        ap_rst_n,
        inData_TVALID,
        inData_TREADY,
        outData_TVALID,
        outData_TREADY,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready
);

parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv128_lc_1 = 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_true = 1'b1;

input  [63:0] inData_TDATA;
input  [7:0] inData_TSTRB;
input  [127:0] inData_TUSER;
input  [0:0] inData_TLAST;
output  [63:0] outData_TDATA;
output  [7:0] outData_TSTRB;
output  [127:0] outData_TUSER;
output  [0:0] outData_TLAST;
input   ap_clk;
input   ap_rst_n;
input   inData_TVALID;
output   inData_TREADY;
output   outData_TVALID;
input   outData_TREADY;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;

reg ap_idle;
reg    ap_rst_n_inv;
wire    hlsDPI_ethernetDetection_U0_ap_start;
wire    hlsDPI_ethernetDetection_U0_ap_done;
wire    hlsDPI_ethernetDetection_U0_ap_continue;
wire    hlsDPI_ethernetDetection_U0_ap_idle;
wire    hlsDPI_ethernetDetection_U0_ap_ready;
wire    hlsDPI_ethernetDetection_U0_inData_TVALID;
wire   [63:0] hlsDPI_ethernetDetection_U0_inData_TDATA;
wire    hlsDPI_ethernetDetection_U0_inData_TREADY;
wire   [7:0] hlsDPI_ethernetDetection_U0_inData_TSTRB;
wire   [127:0] hlsDPI_ethernetDetection_U0_inData_TUSER;
wire   [0:0] hlsDPI_ethernetDetection_U0_inData_TLAST;
wire   [63:0] hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_din;
wire    hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_full_n;
wire    hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_write;
wire   [7:0] hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_din;
wire    hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_full_n;
wire    hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_write;
wire   [127:0] hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_din;
wire    hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_full_n;
wire    hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_write;
wire   [0:0] hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_din;
wire    hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_full_n;
wire    hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_write;
reg    hlsDPI_dpi_U0_ap_start = 1'b0;
wire    hlsDPI_dpi_U0_ap_done;
wire    hlsDPI_dpi_U0_ap_continue;
wire    hlsDPI_dpi_U0_ap_idle;
wire    hlsDPI_dpi_U0_ap_ready;
wire    hlsDPI_dpi_U0_outData_TREADY;
wire   [63:0] hlsDPI_dpi_U0_outData_TDATA;
wire    hlsDPI_dpi_U0_outData_TVALID;
wire   [7:0] hlsDPI_dpi_U0_outData_TSTRB;
wire   [127:0] hlsDPI_dpi_U0_outData_TUSER;
wire   [0:0] hlsDPI_dpi_U0_outData_TLAST;
wire   [63:0] hlsDPI_dpi_U0_parser2dpi_V_data_V_dout;
wire    hlsDPI_dpi_U0_parser2dpi_V_data_V_empty_n;
wire    hlsDPI_dpi_U0_parser2dpi_V_data_V_read;
wire   [7:0] hlsDPI_dpi_U0_parser2dpi_V_strb_V_dout;
wire    hlsDPI_dpi_U0_parser2dpi_V_strb_V_empty_n;
wire    hlsDPI_dpi_U0_parser2dpi_V_strb_V_read;
wire   [127:0] hlsDPI_dpi_U0_parser2dpi_V_user_V_dout;
wire    hlsDPI_dpi_U0_parser2dpi_V_user_V_empty_n;
wire    hlsDPI_dpi_U0_parser2dpi_V_user_V_read;
wire   [0:0] hlsDPI_dpi_U0_parser2dpi_V_last_V_dout;
wire    hlsDPI_dpi_U0_parser2dpi_V_last_V_empty_n;
wire    hlsDPI_dpi_U0_parser2dpi_V_last_V_read;
wire    ap_sig_hs_continue;
wire    parser2dpi_V_data_V_U_ap_dummy_ce;
wire   [63:0] parser2dpi_V_data_V_din;
wire    parser2dpi_V_data_V_full_n;
wire    parser2dpi_V_data_V_write;
wire   [63:0] parser2dpi_V_data_V_dout;
wire    parser2dpi_V_data_V_empty_n;
wire    parser2dpi_V_data_V_read;
wire    parser2dpi_V_strb_V_U_ap_dummy_ce;
wire   [7:0] parser2dpi_V_strb_V_din;
wire    parser2dpi_V_strb_V_full_n;
wire    parser2dpi_V_strb_V_write;
wire   [7:0] parser2dpi_V_strb_V_dout;
wire    parser2dpi_V_strb_V_empty_n;
wire    parser2dpi_V_strb_V_read;
wire    parser2dpi_V_user_V_U_ap_dummy_ce;
wire   [127:0] parser2dpi_V_user_V_din;
wire    parser2dpi_V_user_V_full_n;
wire    parser2dpi_V_user_V_write;
wire   [127:0] parser2dpi_V_user_V_dout;
wire    parser2dpi_V_user_V_empty_n;
wire    parser2dpi_V_user_V_read;
wire    parser2dpi_V_last_V_U_ap_dummy_ce;
wire   [0:0] parser2dpi_V_last_V_din;
wire    parser2dpi_V_last_V_full_n;
wire    parser2dpi_V_last_V_write;
wire   [0:0] parser2dpi_V_last_V_dout;
wire    parser2dpi_V_last_V_empty_n;
wire    parser2dpi_V_last_V_read;
reg    ap_reg_procdone_hlsDPI_ethernetDetection_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_hlsDPI_dpi_U0 = 1'b0;
reg    ap_CS;
wire    ap_sig_top_allready;


hlsDPI_ethernetDetection hlsDPI_ethernetDetection_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( hlsDPI_ethernetDetection_U0_ap_start ),
    .ap_done( hlsDPI_ethernetDetection_U0_ap_done ),
    .ap_continue( hlsDPI_ethernetDetection_U0_ap_continue ),
    .ap_idle( hlsDPI_ethernetDetection_U0_ap_idle ),
    .ap_ready( hlsDPI_ethernetDetection_U0_ap_ready ),
    .inData_TVALID( hlsDPI_ethernetDetection_U0_inData_TVALID ),
    .inData_TDATA( hlsDPI_ethernetDetection_U0_inData_TDATA ),
    .inData_TREADY( hlsDPI_ethernetDetection_U0_inData_TREADY ),
    .inData_TSTRB( hlsDPI_ethernetDetection_U0_inData_TSTRB ),
    .inData_TUSER( hlsDPI_ethernetDetection_U0_inData_TUSER ),
    .inData_TLAST( hlsDPI_ethernetDetection_U0_inData_TLAST ),
    .parser2dpi_V_data_V_din( hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_din ),
    .parser2dpi_V_data_V_full_n( hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_full_n ),
    .parser2dpi_V_data_V_write( hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_write ),
    .parser2dpi_V_strb_V_din( hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_din ),
    .parser2dpi_V_strb_V_full_n( hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_full_n ),
    .parser2dpi_V_strb_V_write( hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_write ),
    .parser2dpi_V_user_V_din( hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_din ),
    .parser2dpi_V_user_V_full_n( hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_full_n ),
    .parser2dpi_V_user_V_write( hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_write ),
    .parser2dpi_V_last_V_din( hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_din ),
    .parser2dpi_V_last_V_full_n( hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_full_n ),
    .parser2dpi_V_last_V_write( hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_write )
);

hlsDPI_dpi hlsDPI_dpi_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( hlsDPI_dpi_U0_ap_start ),
    .ap_done( hlsDPI_dpi_U0_ap_done ),
    .ap_continue( hlsDPI_dpi_U0_ap_continue ),
    .ap_idle( hlsDPI_dpi_U0_ap_idle ),
    .ap_ready( hlsDPI_dpi_U0_ap_ready ),
    .outData_TREADY( hlsDPI_dpi_U0_outData_TREADY ),
    .outData_TDATA( hlsDPI_dpi_U0_outData_TDATA ),
    .outData_TVALID( hlsDPI_dpi_U0_outData_TVALID ),
    .outData_TSTRB( hlsDPI_dpi_U0_outData_TSTRB ),
    .outData_TUSER( hlsDPI_dpi_U0_outData_TUSER ),
    .outData_TLAST( hlsDPI_dpi_U0_outData_TLAST ),
    .parser2dpi_V_data_V_dout( hlsDPI_dpi_U0_parser2dpi_V_data_V_dout ),
    .parser2dpi_V_data_V_empty_n( hlsDPI_dpi_U0_parser2dpi_V_data_V_empty_n ),
    .parser2dpi_V_data_V_read( hlsDPI_dpi_U0_parser2dpi_V_data_V_read ),
    .parser2dpi_V_strb_V_dout( hlsDPI_dpi_U0_parser2dpi_V_strb_V_dout ),
    .parser2dpi_V_strb_V_empty_n( hlsDPI_dpi_U0_parser2dpi_V_strb_V_empty_n ),
    .parser2dpi_V_strb_V_read( hlsDPI_dpi_U0_parser2dpi_V_strb_V_read ),
    .parser2dpi_V_user_V_dout( hlsDPI_dpi_U0_parser2dpi_V_user_V_dout ),
    .parser2dpi_V_user_V_empty_n( hlsDPI_dpi_U0_parser2dpi_V_user_V_empty_n ),
    .parser2dpi_V_user_V_read( hlsDPI_dpi_U0_parser2dpi_V_user_V_read ),
    .parser2dpi_V_last_V_dout( hlsDPI_dpi_U0_parser2dpi_V_last_V_dout ),
    .parser2dpi_V_last_V_empty_n( hlsDPI_dpi_U0_parser2dpi_V_last_V_empty_n ),
    .parser2dpi_V_last_V_read( hlsDPI_dpi_U0_parser2dpi_V_last_V_read )
);

FIFO_hlsDPI_parser2dpi_V_data_V parser2dpi_V_data_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( parser2dpi_V_data_V_U_ap_dummy_ce ),
    .if_write_ce( parser2dpi_V_data_V_U_ap_dummy_ce ),
    .if_din( parser2dpi_V_data_V_din ),
    .if_full_n( parser2dpi_V_data_V_full_n ),
    .if_write( parser2dpi_V_data_V_write ),
    .if_dout( parser2dpi_V_data_V_dout ),
    .if_empty_n( parser2dpi_V_data_V_empty_n ),
    .if_read( parser2dpi_V_data_V_read )
);

FIFO_hlsDPI_parser2dpi_V_strb_V parser2dpi_V_strb_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( parser2dpi_V_strb_V_U_ap_dummy_ce ),
    .if_write_ce( parser2dpi_V_strb_V_U_ap_dummy_ce ),
    .if_din( parser2dpi_V_strb_V_din ),
    .if_full_n( parser2dpi_V_strb_V_full_n ),
    .if_write( parser2dpi_V_strb_V_write ),
    .if_dout( parser2dpi_V_strb_V_dout ),
    .if_empty_n( parser2dpi_V_strb_V_empty_n ),
    .if_read( parser2dpi_V_strb_V_read )
);

FIFO_hlsDPI_parser2dpi_V_user_V parser2dpi_V_user_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( parser2dpi_V_user_V_U_ap_dummy_ce ),
    .if_write_ce( parser2dpi_V_user_V_U_ap_dummy_ce ),
    .if_din( parser2dpi_V_user_V_din ),
    .if_full_n( parser2dpi_V_user_V_full_n ),
    .if_write( parser2dpi_V_user_V_write ),
    .if_dout( parser2dpi_V_user_V_dout ),
    .if_empty_n( parser2dpi_V_user_V_empty_n ),
    .if_read( parser2dpi_V_user_V_read )
);

FIFO_hlsDPI_parser2dpi_V_last_V parser2dpi_V_last_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( parser2dpi_V_last_V_U_ap_dummy_ce ),
    .if_write_ce( parser2dpi_V_last_V_U_ap_dummy_ce ),
    .if_din( parser2dpi_V_last_V_din ),
    .if_full_n( parser2dpi_V_last_V_full_n ),
    .if_write( parser2dpi_V_last_V_write ),
    .if_dout( parser2dpi_V_last_V_dout ),
    .if_empty_n( parser2dpi_V_last_V_empty_n ),
    .if_read( parser2dpi_V_last_V_read )
);



/// ap_reg_procdone_hlsDPI_dpi_U0 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_hlsDPI_dpi_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_hlsDPI_dpi_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_hlsDPI_dpi_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == hlsDPI_dpi_U0_ap_done)) begin
            ap_reg_procdone_hlsDPI_dpi_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_hlsDPI_ethernetDetection_U0 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_hlsDPI_ethernetDetection_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_hlsDPI_ethernetDetection_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_hlsDPI_ethernetDetection_U0 <= ap_const_logic_0;
        end else if ((hlsDPI_ethernetDetection_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_hlsDPI_ethernetDetection_U0 <= ap_const_logic_1;
        end
    end
end

/// hlsDPI_dpi_U0_ap_start assign process. ///
always @ (posedge ap_clk) begin : ap_ret_hlsDPI_dpi_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        hlsDPI_dpi_U0_ap_start <= ap_const_logic_0;
    end else begin
        hlsDPI_dpi_U0_ap_start <= ap_const_logic_1;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    ap_CS <= ap_const_logic_0;
end

/// ap_idle assign process. ///
always @ (hlsDPI_ethernetDetection_U0_ap_idle or hlsDPI_dpi_U0_ap_idle) begin
    if (((hlsDPI_ethernetDetection_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == hlsDPI_dpi_U0_ap_idle))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (hlsDPI_dpi_U0_ap_done) begin
    if ((ap_const_logic_1 == hlsDPI_dpi_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign ap_sig_hs_continue = ap_const_logic_1;
assign ap_sig_top_allready = hlsDPI_ethernetDetection_U0_ap_ready;
assign hlsDPI_dpi_U0_ap_continue = ap_sig_hs_continue;
assign hlsDPI_dpi_U0_outData_TREADY = outData_TREADY;
assign hlsDPI_dpi_U0_parser2dpi_V_data_V_dout = parser2dpi_V_data_V_dout;
assign hlsDPI_dpi_U0_parser2dpi_V_data_V_empty_n = parser2dpi_V_data_V_empty_n;
assign hlsDPI_dpi_U0_parser2dpi_V_last_V_dout = parser2dpi_V_last_V_dout;
assign hlsDPI_dpi_U0_parser2dpi_V_last_V_empty_n = parser2dpi_V_last_V_empty_n;
assign hlsDPI_dpi_U0_parser2dpi_V_strb_V_dout = parser2dpi_V_strb_V_dout;
assign hlsDPI_dpi_U0_parser2dpi_V_strb_V_empty_n = parser2dpi_V_strb_V_empty_n;
assign hlsDPI_dpi_U0_parser2dpi_V_user_V_dout = parser2dpi_V_user_V_dout;
assign hlsDPI_dpi_U0_parser2dpi_V_user_V_empty_n = parser2dpi_V_user_V_empty_n;
assign hlsDPI_ethernetDetection_U0_ap_continue = ap_const_logic_1;
assign hlsDPI_ethernetDetection_U0_ap_start = ap_start;
assign hlsDPI_ethernetDetection_U0_inData_TDATA = inData_TDATA;
assign hlsDPI_ethernetDetection_U0_inData_TLAST = inData_TLAST;
assign hlsDPI_ethernetDetection_U0_inData_TSTRB = inData_TSTRB;
assign hlsDPI_ethernetDetection_U0_inData_TUSER = inData_TUSER;
assign hlsDPI_ethernetDetection_U0_inData_TVALID = inData_TVALID;
assign hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_full_n = parser2dpi_V_data_V_full_n;
assign hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_full_n = parser2dpi_V_last_V_full_n;
assign hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_full_n = parser2dpi_V_strb_V_full_n;
assign hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_full_n = parser2dpi_V_user_V_full_n;
assign inData_TREADY = hlsDPI_ethernetDetection_U0_inData_TREADY;
assign outData_TDATA = hlsDPI_dpi_U0_outData_TDATA;
assign outData_TLAST = hlsDPI_dpi_U0_outData_TLAST;
assign outData_TSTRB = hlsDPI_dpi_U0_outData_TSTRB;
assign outData_TUSER = hlsDPI_dpi_U0_outData_TUSER;
assign outData_TVALID = hlsDPI_dpi_U0_outData_TVALID;
assign parser2dpi_V_data_V_U_ap_dummy_ce = ap_const_logic_1;
assign parser2dpi_V_data_V_din = hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_din;
assign parser2dpi_V_data_V_read = hlsDPI_dpi_U0_parser2dpi_V_data_V_read;
assign parser2dpi_V_data_V_write = hlsDPI_ethernetDetection_U0_parser2dpi_V_data_V_write;
assign parser2dpi_V_last_V_U_ap_dummy_ce = ap_const_logic_1;
assign parser2dpi_V_last_V_din = hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_din;
assign parser2dpi_V_last_V_read = hlsDPI_dpi_U0_parser2dpi_V_last_V_read;
assign parser2dpi_V_last_V_write = hlsDPI_ethernetDetection_U0_parser2dpi_V_last_V_write;
assign parser2dpi_V_strb_V_U_ap_dummy_ce = ap_const_logic_1;
assign parser2dpi_V_strb_V_din = hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_din;
assign parser2dpi_V_strb_V_read = hlsDPI_dpi_U0_parser2dpi_V_strb_V_read;
assign parser2dpi_V_strb_V_write = hlsDPI_ethernetDetection_U0_parser2dpi_V_strb_V_write;
assign parser2dpi_V_user_V_U_ap_dummy_ce = ap_const_logic_1;
assign parser2dpi_V_user_V_din = hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_din;
assign parser2dpi_V_user_V_read = hlsDPI_dpi_U0_parser2dpi_V_user_V_read;
assign parser2dpi_V_user_V_write = hlsDPI_ethernetDetection_U0_parser2dpi_V_user_V_write;


endmodule //hlsDPI

