// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _hlsDPI_ethernetDetection_HH_
#define _hlsDPI_ethernetDetection_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct hlsDPI_ethernetDetection : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > inData_TVALID;
    sc_in< sc_lv<64> > inData_TDATA;
    sc_out< sc_logic > inData_TREADY;
    sc_in< sc_lv<8> > inData_TSTRB;
    sc_in< sc_lv<128> > inData_TUSER;
    sc_in< sc_lv<1> > inData_TLAST;
    sc_out< sc_lv<64> > parser2dpi_V_data_V_din;
    sc_in< sc_logic > parser2dpi_V_data_V_full_n;
    sc_out< sc_logic > parser2dpi_V_data_V_write;
    sc_out< sc_lv<8> > parser2dpi_V_strb_V_din;
    sc_in< sc_logic > parser2dpi_V_strb_V_full_n;
    sc_out< sc_logic > parser2dpi_V_strb_V_write;
    sc_out< sc_lv<128> > parser2dpi_V_user_V_din;
    sc_in< sc_logic > parser2dpi_V_user_V_full_n;
    sc_out< sc_logic > parser2dpi_V_user_V_write;
    sc_out< sc_lv<1> > parser2dpi_V_last_V_din;
    sc_in< sc_logic > parser2dpi_V_last_V_full_n;
    sc_out< sc_logic > parser2dpi_V_last_V_write;


    // Module declarations
    hlsDPI_ethernetDetection(sc_module_name name);
    SC_HAS_PROCESS(hlsDPI_ethernetDetection);

    ~hlsDPI_ethernetDetection();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm0;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm0_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<2> > ap_CS_fsm1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st0_fsm1_0;
    sc_signal< bool > ap_sig_bdd_34;
    sc_signal< sc_lv<2> > dpiDetectState_load_load_fu_163_p1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_76_p6;
    sc_signal< bool > ap_sig_bdd_63;
    sc_signal< sc_logic > parser2dpi_V_data_V1_status;
    sc_signal< sc_lv<2> > dpiDetectState_load_reg_252;
    sc_signal< sc_lv<1> > tmp_4_reg_276;
    sc_signal< sc_lv<1> > tmp_2_reg_280;
    sc_signal< sc_lv<1> > tmp_9_reg_288;
    sc_signal< sc_lv<1> > tmp_1_reg_292;
    sc_signal< sc_lv<1> > tmp_7_reg_296;
    sc_signal< bool > ap_sig_bdd_102;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm1_1;
    sc_signal< bool > ap_sig_bdd_108;
    sc_signal< sc_lv<2> > dpiDetectState;
    sc_signal< sc_lv<64> > dmp_prevWord_data_V;
    sc_signal< sc_lv<8> > dmp_prevWord_strb_V;
    sc_signal< sc_lv<128> > dmp_prevWord_user_V;
    sc_signal< sc_lv<1> > dmp_prevWord_last_V;
    sc_signal< sc_lv<16> > dmp_macType_V;
    sc_signal< sc_lv<64> > tmp_data_V_3_reg_256;
    sc_signal< sc_lv<8> > tmp_strb_V_3_reg_261;
    sc_signal< sc_lv<128> > tmp_user_V_3_reg_266;
    sc_signal< sc_lv<1> > tmp_last_V_3_reg_271;
    sc_signal< sc_lv<1> > grp_fu_118_p2;
    sc_signal< sc_lv<1> > grp_fu_135_p1;
    sc_signal< sc_lv<1> > tmp_7_fu_234_p2;
    sc_signal< sc_logic > parser2dpi_V_data_V1_update;
    sc_signal< sc_lv<16> > p_Result_s_fu_220_p3;
    sc_signal< sc_lv<8> > p_Result_6_fu_210_p4;
    sc_signal< sc_lv<8> > p_Result_4_fu_200_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm0;
    sc_signal< sc_lv<2> > ap_NS_fsm1;
    sc_signal< bool > ap_sig_bdd_197;
    sc_signal< bool > ap_sig_bdd_52;
    sc_signal< bool > ap_sig_bdd_56;
    sc_signal< bool > ap_sig_bdd_115;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm0_0;
    static const sc_lv<2> ap_ST_st2_fsm1_1;
    static const sc_lv<2> ap_ST_st0_fsm1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<16> ap_const_lv16_800;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_102();
    void thread_ap_sig_bdd_108();
    void thread_ap_sig_bdd_115();
    void thread_ap_sig_bdd_197();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_34();
    void thread_ap_sig_bdd_52();
    void thread_ap_sig_bdd_56();
    void thread_ap_sig_bdd_63();
    void thread_ap_sig_cseq_ST_st0_fsm1_0();
    void thread_ap_sig_cseq_ST_st1_fsm0_0();
    void thread_ap_sig_cseq_ST_st2_fsm1_1();
    void thread_dpiDetectState_load_load_fu_163_p1();
    void thread_grp_fu_118_p2();
    void thread_grp_fu_135_p1();
    void thread_grp_nbreadreq_fu_76_p6();
    void thread_inData_TREADY();
    void thread_p_Result_4_fu_200_p4();
    void thread_p_Result_6_fu_210_p4();
    void thread_p_Result_s_fu_220_p3();
    void thread_parser2dpi_V_data_V1_status();
    void thread_parser2dpi_V_data_V1_update();
    void thread_parser2dpi_V_data_V_din();
    void thread_parser2dpi_V_data_V_write();
    void thread_parser2dpi_V_last_V_din();
    void thread_parser2dpi_V_last_V_write();
    void thread_parser2dpi_V_strb_V_din();
    void thread_parser2dpi_V_strb_V_write();
    void thread_parser2dpi_V_user_V_din();
    void thread_parser2dpi_V_user_V_write();
    void thread_tmp_7_fu_234_p2();
    void thread_ap_NS_fsm1();
    void thread_ap_NS_fsm0();
};

}

using namespace ap_rtl;

#endif
